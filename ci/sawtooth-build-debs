# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

# Description:
#   Builds the environment needed to create the Sawtooth Lake python3 debs.
#   Running the image will put the Sawtooth Lake debs in
#   sawtooth-core/build/debs on your local machine.
#
# Build:
#   $ cd sawtooth-core
#   $ docker build . -f ci/sawtooth-build-debs -t sawtooth-build-debs
#
# Run:
#   $ cd sawtooth-core
#   $ docker run -v $(pwd):/project/sawtooth-core sawtooth-build-debs

FROM ubuntu:xenial

# Add additional xenial repos
RUN sh -c "echo deb http://archive.ubuntu.com/ubuntu xenial-backports main restricted universe multiverse >> /etc/apt/sources.list" && \
    sh -c "echo deb-src http://archive.ubuntu.com/ubuntu xenial-backports main restricted universe multiverse >> /etc/apt/sources.list"

# Create build directories
RUN mkdir -p /home/build/packages && mkdir -p /home/build/projects
ENV build_dir=/home/build/projects pkg_dir=/home/build/packages

# Add sawtooth repo
RUN echo "deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe" >> /etc/apt/sources.list \
 && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 8AA7AF1F1091A5FD \
 && apt-get update \
 && apt-get install -y -q --allow-downgrades \
    apt-transport-https \
    autoconf \
    automake \
    build-essential \
    ca-certificates \
    cmake \
    connect-proxy \
    dh-autoreconf \
    dh-make \
    equivs \
    g++ \
    git \
    inetutils-ping \
    libcrypto++-dev \
    libffi-dev \
    libgmp-dev \
    libjson-c-dev \
    libssl-dev \
    libtool \
    libzmq3-dev \
    make \
    pep8 \
    pkg-config \
    python-all \
    python-all-dev \
    python-setuptools \
    python3-aiodns=1.1.1-1 \
    python3-aiohttp=1.3.5-1 \
    python3-all-dev \
    python3-appdirs \
    python3-async-timeout=1.2.0-1 \
    python3-bitcoin=1.1.42-1 \
    python3-cbor \
    python3-cchardet=2.0a3-1 \
    python3-cffi \
    python3-chardet=2.3.0-1 \
    python3-colorlog \
    python3-cryptography-vectors=1.7.2-1 \
    python3-cryptography=1.7.2-1 \
    python3-dev \
    python3-ecdsa \
    python3-flake8 \
    python3-grpcio-tools=1.1.3-1 \
    python3-grpcio=1.1.3-1 \
    python3-hypothesis \
    python3-idna \
    python3-iso8601 \
    python3-lmdb \
    python3-lmdb=0.92-1 \
    python3-multidict=2.1.4-1 \
    python3-netifaces=0.10.4-0.1build2 \
    python3-pip \
    python3-pkgconfig \
    python3-pretend \
    python3-protobuf=3.2.0-1 \
    python3-pyasn1 \
    python3-pyasn1-modules \
    python3-pycares=2.1.1-1 \
    python3-pycparser \
    python3-pytest \
    python3-pytest-runner=2.6.2-1 \
    python3-pytest=2.9.0-1 \
    python3-pytz=2016.10-1 \
    python3-requests \
    python3-secp256k1=0.13.2-1 \
    python3-setuptools \
    python3-setuptools-scm=1.15.0-1 \
    python3-six=1.10.0-1 \
    python3-stdeb \
    python3-toml \
    python3-yaml \
    python3-yarl=0.10.0-1 \
    python3-zmq \
    rsync \
    software-properties-common \
    sudo \
    swig3.0 \
    unzip \
    wget \
    zip \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/swig3.0 /usr/bin/swig

# Install SGX SDK for PoET
WORKDIR /tmp

RUN wget https://download.01.org/intel-sgx/linux-1.8/sgx_linux_ubuntu16.04.1_x64_sdk_1.8.100.37689.bin && \
    chmod +x sgx_linux_ubuntu16.04.1_x64_sdk_1.8.100.37689.bin && \
    echo "yes" | ./sgx_linux_ubuntu16.04.1_x64_sdk_1.8.100.37689.bin && \
    . /tmp/sgxsdk/environment && \
    export SGXSDKInstallPath=/tmp/sgxsdk/

# Create mount point for source
WORKDIR /project/sawtooth-core

# Build sawtooth debs
ENV VERSION=AUTO_STRICT
ENTRYPOINT ./bin/build_debs
