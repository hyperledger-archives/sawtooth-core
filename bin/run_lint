#!/bin/bash
#
# Copyright 2016 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

set -e

find_packages() {
    topdir=$1
    since=$2

    (
    if [ "$since" != "" ]; then
        git ls-files -mo "$topdir/*.py" -x build
        git diff --name-only $since "$topdir/*.py"
    else
        find $topdir -name \*.py
    fi
    ) \
        | sort \
        | uniq \
        | git check-ignore --stdin --non-matching --verbose \
        | grep ^:: \
        | sed -e 's/^::\s//' \
        | grep -v /setup.py$ \
        | grep -v _pb2\.py$ \
        | grep -v poet_enclave\.py$
}

lint() {
    top_dir=$(cd $(dirname $(dirname $0)) && pwd)
    cd $top_dir
    subdir=$1
    since=$2

    pylintrc=.pylintrc
    pylint_bin="python3 -m pylint"

    error=0

    packages=$(find_packages "$subdir" "$since")

    if [ "$packages" != "" ]; then
    [ $VERBOSE = 1 ] && (
        echo "------------------------------------------------------------------------------"
        echo "-- Running pep8 in $subdir..."
    )
    pep8 --config=$topdir/.pep8 $packages || error=1

        [ $VERBOSE = 1 ] && (
            echo "------------------------------------------------------------------------------"
            echo "-- Running $pylint_bin $pylintrc in $subdir..."
        )
        $pylint_bin \
            --rcfile=$pylintrc \
            --reports=no \
            --persistent=no \
            $packages || error=1


        [ $VERBOSE = 1 ] && (
            echo "------------------------------------------------------------------------------"
            echo "-- Checking for CRLF in $subdir..."
        )
        file $packages | grep CRLF && error=1
    else
        [ $VERBOSE = 1 ] && (
            echo "------------------------------------------------------------------------------"
            echo "-- Skipping pep8 and pylint $pylintrc in $subdir. (Nothing to do.)"
        )
    fi

    return $error
}

usage() {
    echo "Usage:"
    echo "  $0 [-s BRANCH] [-n] [-h]"
    echo
    echo "Options:"
    echo "  -h          print usage and exit"
    echo "  -n          dry-run, only prints files that would be linted"
    echo "  -s BRANCH   only lint files changed since BRANCH"
    echo "  -v          increase verbosity"
}


DRY_RUN=0
VERBOSE=0
SINCE=""
while getopts :s:nhv opt
do
    case $opt in
      h)
        usage
        exit 0
        ;;
      n)
        DRY_RUN=1
        ;;
      s)
        SINCE=$OPTARG
        ;;
      v)
        if [ "$VERBOSE" = "1" ]; then
            set -x
        fi
        VERBOSE=1
        ;;
      \?)
        echo "Invalid option: -$OPTARG" >&2
        exit 2
        ;;
    esac
done

if [ "$DRY_RUN" = "1" ]; then
    for dir in core signing validator sdk/python sdk/examples/intkey_python \
        extensions/arcade consensus/poet/cli consensus/poet/common \
        consensus/poet/core consensus/poet/families consensus/poet/sgx \
        consensus/poet/simulator
    do
        for package in $(find_packages "$dir" "$SINCE")
        do
            echo $package
        done
    done
    exit 0
fi


top_dir=$(cd $(dirname $(dirname $0)) && pwd)
retval=0

PYTHONPATH=$top_dir/signing
export PYTHONPATH
lint signing "$SINCE" || retval=1

PYTHONPATH=$top_dir/sdk/python
PYTHONPATH=$PYTHONPATH:$top_dir/sdk/examples/intkey_python
PYTHONPATH=$PYTHONPATH:$top_dir/sdk/examples/xo_python
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/cli
export PYTHONPATH
lint sdk/python "$SINCE" || retval=1
lint sdk/examples/intkey_python "$SINCE" || retval=1
lint sdk/examples/xo_python "$SINCE" || retval=1
lint rest_api/sawtooth_rest_api "$SINCE" || retval=1

PYTHONPATH=$top_dir/families/settings
PYTHONPATH=$top_dir/families/identity
PYTHONPATH=$top_dir/families/block_info
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/families/supplychain/python
PYTHONPATH=$PYTHONPATH:$top_dir/sdk/python
export PYTHONPATH
lint families/settings "$SINCE" || retval=1
lint families/identity "$SINCE" || retval=1
lint families/supplychain/python "$SINCE" || retval=1

PYTHONPATH=$top_dir/families/battleship
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/sdk/python
PYTHONPATH=$PYTHONPATH:$top_dir/validator
export PYTHONPATH
lint families/battleship "$SINCE" || retval=1

PYTHONPATH=$top_dir/families/block_info
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/sdk/python
PYTHONPATH=$PYTHONPATH:$top_dir/validator
export PYTHONPATH
lint families/block_info "$SINCE" || retval=1

PYTHONPATH=$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/validator
export PYTHONPATH
lint validator/sawtooth_validator "$SINCE" || retval=1

PYTHONPATH=$top_dir/consensus/poet/common
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/common/tests
export PYTHONPATH
lint consensus/poet/common "$SINCE" || retval=1

PYTHONPATH=$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/common
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/core
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/core/tests
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/simulator
export PYTHONPATH
lint consensus/poet/core "$SINCE" || retval=1

PYTHONPATH=$top_dir/sdk/python
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/common
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/families
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/families/tests
export PYTHONPATH
lint consensus/poet/families "$SINCE" || retval=1

PYTHONPATH=$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/common
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/sgx
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/sgx/tests
export PYTHONPATH
lint consensus/poet/sgx "$SINCE" || retval=1

PYTHONPATH=$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/common
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/simulator
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/simulator/tests
export PYTHONPATH
lint consensus/poet/simulator "$SINCE" || retval=1

PYTHONPATH=$top_dir/consensus/poet/cli
PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/validator
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/common
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/core
export PYTHONPATH
lint consensus/poet/cli "$SINCE" || retval=1

PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/utility/ias_proxy
PYTHONPATH=$PYTHONPATH:$top_dir/utility/ias_proxy/tests
PYTHONPATH=$PYTHONPATH:$top_dir/utility/ias_client
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/common
PYTHONPATH=$PYTHONPATH:$top_dir/consensus/poet/sgx
PYTHONPATH=$PYTHONPATH:$top_dir/sdk/python
export PYTHONPATH
lint utility/ias_proxy "$SINCE" || retval=1

PYTHONPATH=$PYTHONPATH:$top_dir/signing
PYTHONPATH=$PYTHONPATH:$top_dir/utility/ias_client
PYTHONPATH=$PYTHONPATH:$top_dir/utility/ias_client/tests
export PYTHONPATH
lint utility/ias_client "$SINCE" || retval=1

PYTHONPATH=$top_dir/cli
PYTHONPATH=$PYTHONPATH:$top_dir/signing
export PYTHONPATH
lint cli "$SINCE" || retval=1

exit $retval
