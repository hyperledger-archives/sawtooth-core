#!/bin/bash
#
# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

usage() {
    echo "Usage:"
    echo "  $0 [-l Language] [-s Language]"
    echo
    echo "Options:"
    echo "  -h            print usage and exit"
    echo "  -l Language   only build the specified language(s)"
    echo "  -s Language   skip the specified language(s)"
}

# Exit on non-zero exit code from subcommand
set -e

# Set sawtooth-core project directory relative to this file
top_dir=$(cd $(dirname $(dirname $0)) && pwd)
docker_dir=$(cd $(dirname $(dirname $0))/docker && pwd)

# Default args
LANGUAGES=""
EXCLUDE=""

while getopts s:l:h opt
do
    case $opt in
        h)
            usage
            exit 0
            ;;
        l)
            LANGUAGES="$LANGUAGES $OPTARG"
            ;;
        s)
            EXCLUDE="$EXCLUDE $OPTARG"
            ;;

        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 2
            ;;
    esac
done

# If no '-m' flags are passed, run these modules
if [[ $LANGUAGES = "" ]]
then
  LANGUAGES="
java
javascript
python
"
fi


set -e

docker_build() {
  image=$1

  # We need to tag all images with an id if we're running in Jenkins, except
  # for the sawtooth-base image, which should not be tagged.
  if [ -z $ISOLATION_ID ] || [ $image = "sawtooth-base" ]; then
    tag=$image
  else
    tag=$image:$ISOLATION_ID
  fi

  echo "[ Building $image... ]"

  # Build the image and pass in any proxy information if set
  docker build -f $docker_dir/$image -t $tag . \
    --build-arg https_proxy=$https_proxy \
    --build-arg http_proxy=$http_proxy \
    --build-arg HTTPS_PROXY=$HTTPS_PROXY \
    --build-arg HTTP_PROXY=$HTTP_PROXY
}

docker_run() {
  image=$1

  # We need to tag all images with an id if we're running in Jenkins, except
  # for the sawtooth-base image, which should not be tagged.
  if [ -z $ISOLATION_ID ] || [ $image = "sawtooth-base" ]; then
    tag=$image
  else
    tag=$image:$ISOLATION_ID
  fi

  docker run --rm -v $top_dir:/project/sawtooth-core $tag
}

main() {

    # Start in project directory
    cd $top_dir

    for language in $LANGUAGES
    do

      # Check if we are skipping this module
      skip=0
      for exclude in $EXCLUDE
      do
        if [[ $language == $exclude ]]
        then
          skip=1
          break
        fi
      done

      if [[ $skip == 1 ]]
      then
        echo "[---Skipping $language---]"
      else
        echo "[---Building $language---]"
        case $language in
            java)
                build_java
                ;;
            javascript)
                build_javascript
                ;;
            python)
                build_python
                ;;

            *)
                echo "Module '$language' not found."
                ;;
       esac
      fi
    done
}

build_java() {
  docker_build sawtooth-build-java
  docker_run sawtooth-build-java
  docker_build sawtooth-tp_intkey_java
}

build_javascript() {
  docker_build sawtooth-build-javascript
  docker_run sawtooth-build-javascript
  docker_build sawtooth-tp_intkey_javascript
}

build_python() {
  docker_build sawtooth-build-python
  docker_run sawtooth-build-python
  docker_build sawtooth-tp_intkey_python
  docker_build sawtooth-rest_api
  docker_build sawtooth-test
  docker_build sawtooth-tp_config
  docker_build sawtooth-tp_validator_registry
  docker_build sawtooth-tp_xo_python
  docker_build sawtooth-validator
}

main
