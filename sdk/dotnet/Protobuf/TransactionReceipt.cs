// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: transaction_receipt.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from transaction_receipt.proto</summary>
public static partial class TransactionReceiptReflection {

  #region Descriptor
  /// <summary>File descriptor for transaction_receipt.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TransactionReceiptReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Chl0cmFuc2FjdGlvbl9yZWNlaXB0LnByb3RvGgxldmVudHMucHJvdG8idwoS",
          "VHJhbnNhY3Rpb25SZWNlaXB0EiMKDXN0YXRlX2NoYW5nZXMYASADKAsyDC5T",
          "dGF0ZUNoYW5nZRIWCgZldmVudHMYAiADKAsyBi5FdmVudBIMCgRkYXRhGAMg",
          "AygMEhYKDnRyYW5zYWN0aW9uX2lkGAQgASgJInsKC1N0YXRlQ2hhbmdlEg8K",
          "B2FkZHJlc3MYASABKAkSDQoFdmFsdWUYAiABKAwSHwoEdHlwZRgDIAEoDjIR",
          "LlN0YXRlQ2hhbmdlLlR5cGUiKwoEVHlwZRIOCgpUWVBFX1VOU0VUEAASBwoD",
          "U0VUEAESCgoGREVMRVRFEAIiNgoPU3RhdGVDaGFuZ2VMaXN0EiMKDXN0YXRl",
          "X2NoYW5nZXMYASADKAsyDC5TdGF0ZUNoYW5nZUIqChVzYXd0b290aC5zZGsu",
          "cHJvdG9idWZQAVoPdHhuX3JlY2VpcHRfcGIyYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::EventsReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::TransactionReceipt), global::TransactionReceipt.Parser, new[]{ "StateChanges", "Events", "Data", "TransactionId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StateChange), global::StateChange.Parser, new[]{ "Address", "Value", "Type" }, null, new[]{ typeof(global::StateChange.Types.Type) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::StateChangeList), global::StateChangeList.Parser, new[]{ "StateChanges" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class TransactionReceipt : pb::IMessage<TransactionReceipt> {
  private static readonly pb::MessageParser<TransactionReceipt> _parser = new pb::MessageParser<TransactionReceipt>(() => new TransactionReceipt());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TransactionReceipt> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransactionReceiptReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransactionReceipt() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransactionReceipt(TransactionReceipt other) : this() {
    stateChanges_ = other.stateChanges_.Clone();
    events_ = other.events_.Clone();
    data_ = other.data_.Clone();
    transactionId_ = other.transactionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TransactionReceipt Clone() {
    return new TransactionReceipt(this);
  }

  /// <summary>Field number for the "state_changes" field.</summary>
  public const int StateChangesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::StateChange> _repeated_stateChanges_codec
      = pb::FieldCodec.ForMessage(10, global::StateChange.Parser);
  private readonly pbc::RepeatedField<global::StateChange> stateChanges_ = new pbc::RepeatedField<global::StateChange>();
  /// <summary>
  /// State changes made by this transaction
  /// StateChange is defined in protos/transaction_receipt.proto
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StateChange> StateChanges {
    get { return stateChanges_; }
  }

  /// <summary>Field number for the "events" field.</summary>
  public const int EventsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Event> _repeated_events_codec
      = pb::FieldCodec.ForMessage(18, global::Event.Parser);
  private readonly pbc::RepeatedField<global::Event> events_ = new pbc::RepeatedField<global::Event>();
  /// <summary>
  /// Events fired by this transaction
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Event> Events {
    get { return events_; }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 3;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_data_codec
      = pb::FieldCodec.ForBytes(26);
  private readonly pbc::RepeatedField<pb::ByteString> data_ = new pbc::RepeatedField<pb::ByteString>();
  /// <summary>
  /// Transaction family defined data
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<pb::ByteString> Data {
    get { return data_; }
  }

  /// <summary>Field number for the "transaction_id" field.</summary>
  public const int TransactionIdFieldNumber = 4;
  private string transactionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TransactionId {
    get { return transactionId_; }
    set {
      transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TransactionReceipt);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TransactionReceipt other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!stateChanges_.Equals(other.stateChanges_)) return false;
    if(!events_.Equals(other.events_)) return false;
    if(!data_.Equals(other.data_)) return false;
    if (TransactionId != other.TransactionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= stateChanges_.GetHashCode();
    hash ^= events_.GetHashCode();
    hash ^= data_.GetHashCode();
    if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    stateChanges_.WriteTo(output, _repeated_stateChanges_codec);
    events_.WriteTo(output, _repeated_events_codec);
    data_.WriteTo(output, _repeated_data_codec);
    if (TransactionId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(TransactionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += stateChanges_.CalculateSize(_repeated_stateChanges_codec);
    size += events_.CalculateSize(_repeated_events_codec);
    size += data_.CalculateSize(_repeated_data_codec);
    if (TransactionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TransactionReceipt other) {
    if (other == null) {
      return;
    }
    stateChanges_.Add(other.stateChanges_);
    events_.Add(other.events_);
    data_.Add(other.data_);
    if (other.TransactionId.Length != 0) {
      TransactionId = other.TransactionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          stateChanges_.AddEntriesFrom(input, _repeated_stateChanges_codec);
          break;
        }
        case 18: {
          events_.AddEntriesFrom(input, _repeated_events_codec);
          break;
        }
        case 26: {
          data_.AddEntriesFrom(input, _repeated_data_codec);
          break;
        }
        case 34: {
          TransactionId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///  StateChange objects have the type of SET, which is either an insert or
///  update, or DELETE. Items marked as a DELETE will have no byte value.
/// </summary>
public sealed partial class StateChange : pb::IMessage<StateChange> {
  private static readonly pb::MessageParser<StateChange> _parser = new pb::MessageParser<StateChange>(() => new StateChange());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StateChange> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransactionReceiptReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StateChange() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StateChange(StateChange other) : this() {
    address_ = other.address_;
    value_ = other.value_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StateChange Clone() {
    return new StateChange(this);
  }

  /// <summary>Field number for the "address" field.</summary>
  public const int AddressFieldNumber = 1;
  private string address_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Address {
    get { return address_; }
    set {
      address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private pb::ByteString value_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private global::StateChange.Types.Type type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StateChange.Types.Type Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StateChange);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StateChange other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Address != other.Address) return false;
    if (Value != other.Value) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Address.Length != 0) hash ^= Address.GetHashCode();
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Address.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Address);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Value);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Address.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
    }
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StateChange other) {
    if (other == null) {
      return;
    }
    if (other.Address.Length != 0) {
      Address = other.Address;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Address = input.ReadString();
          break;
        }
        case 18: {
          Value = input.ReadBytes();
          break;
        }
        case 24: {
          type_ = (global::StateChange.Types.Type) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the StateChange message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("TYPE_UNSET")] Unset = 0,
      [pbr::OriginalName("SET")] Set = 1,
      [pbr::OriginalName("DELETE")] Delete = 2,
    }

  }
  #endregion

}

/// <summary>
/// A collection of state changes.
/// </summary>
public sealed partial class StateChangeList : pb::IMessage<StateChangeList> {
  private static readonly pb::MessageParser<StateChangeList> _parser = new pb::MessageParser<StateChangeList>(() => new StateChangeList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StateChangeList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransactionReceiptReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StateChangeList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StateChangeList(StateChangeList other) : this() {
    stateChanges_ = other.stateChanges_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StateChangeList Clone() {
    return new StateChangeList(this);
  }

  /// <summary>Field number for the "state_changes" field.</summary>
  public const int StateChangesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::StateChange> _repeated_stateChanges_codec
      = pb::FieldCodec.ForMessage(10, global::StateChange.Parser);
  private readonly pbc::RepeatedField<global::StateChange> stateChanges_ = new pbc::RepeatedField<global::StateChange>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::StateChange> StateChanges {
    get { return stateChanges_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StateChangeList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StateChangeList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!stateChanges_.Equals(other.stateChanges_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= stateChanges_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    stateChanges_.WriteTo(output, _repeated_stateChanges_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += stateChanges_.CalculateSize(_repeated_stateChanges_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StateChangeList other) {
    if (other == null) {
      return;
    }
    stateChanges_.Add(other.stateChanges_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          stateChanges_.AddEntriesFrom(input, _repeated_stateChanges_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
