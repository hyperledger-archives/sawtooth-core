// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: authorization.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from authorization.proto</summary>
public static partial class AuthorizationReflection {

  #region Descriptor
  /// <summary>File descriptor for authorization.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AuthorizationReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNhdXRob3JpemF0aW9uLnByb3RvIiUKEUNvbm5lY3Rpb25SZXF1ZXN0EhAK",
          "CGVuZHBvaW50GAEgASgJIsoCChJDb25uZWN0aW9uUmVzcG9uc2USLAoFcm9s",
          "ZXMYASADKAsyHS5Db25uZWN0aW9uUmVzcG9uc2UuUm9sZUVudHJ5EioKBnN0",
          "YXR1cxgCIAEoDjIaLkNvbm5lY3Rpb25SZXNwb25zZS5TdGF0dXMaXgoJUm9s",
          "ZUVudHJ5EhcKBHJvbGUYASABKA4yCS5Sb2xlVHlwZRI4CglhdXRoX3R5cGUY",
          "AiABKA4yJS5Db25uZWN0aW9uUmVzcG9uc2UuQXV0aG9yaXphdGlvblR5cGUi",
          "LQoGU3RhdHVzEhAKDFNUQVRVU19VTlNFVBAAEgYKAk9LEAESCQoFRVJST1IQ",
          "AiJLChFBdXRob3JpemF0aW9uVHlwZRIcChhBVVRIT1JJWkFUSU9OX1RZUEVf",
          "VU5TRVQQABIJCgVUUlVTVBABEg0KCUNIQUxMRU5HRRACIkkKGUF1dGhvcml6",
          "YXRpb25UcnVzdFJlcXVlc3QSGAoFcm9sZXMYASADKA4yCS5Sb2xlVHlwZRIS",
          "CgpwdWJsaWNfa2V5GAIgASgJIjYKGkF1dGhvcml6YXRpb25UcnVzdFJlc3Bv",
          "bnNlEhgKBXJvbGVzGAEgAygOMgkuUm9sZVR5cGUiNgoWQXV0aG9yaXphdGlv",
          "blZpb2xhdGlvbhIcCgl2aW9sYXRpb24YASABKA4yCS5Sb2xlVHlwZSIfCh1B",
          "dXRob3JpemF0aW9uQ2hhbGxlbmdlUmVxdWVzdCIxCh5BdXRob3JpemF0aW9u",
          "Q2hhbGxlbmdlUmVzcG9uc2USDwoHcGF5bG9hZBgBIAEoDCJfChxBdXRob3Jp",
          "emF0aW9uQ2hhbGxlbmdlU3VibWl0EhIKCnB1YmxpY19rZXkYASABKAkSEQoJ",
          "c2lnbmF0dXJlGAMgASgJEhgKBXJvbGVzGAQgAygOMgkuUm9sZVR5cGUiOAoc",
          "QXV0aG9yaXphdGlvbkNoYWxsZW5nZVJlc3VsdBIYCgVyb2xlcxgBIAMoDjIJ",
          "LlJvbGVUeXBlKjUKCFJvbGVUeXBlEhMKD1JPTEVfVFlQRV9VTlNFVBAAEgcK",
          "A0FMTBABEgsKB05FVFdPUksQAkIsChVzYXd0b290aC5zZGsucHJvdG9idWZQ",
          "AVoRYXV0aG9yaXphdGlvbl9wYjJiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RoleType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ConnectionRequest), global::ConnectionRequest.Parser, new[]{ "Endpoint" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ConnectionResponse), global::ConnectionResponse.Parser, new[]{ "Roles", "Status" }, null, new[]{ typeof(global::ConnectionResponse.Types.Status), typeof(global::ConnectionResponse.Types.AuthorizationType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ConnectionResponse.Types.RoleEntry), global::ConnectionResponse.Types.RoleEntry.Parser, new[]{ "Role", "AuthType" }, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthorizationTrustRequest), global::AuthorizationTrustRequest.Parser, new[]{ "Roles", "PublicKey" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthorizationTrustResponse), global::AuthorizationTrustResponse.Parser, new[]{ "Roles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthorizationViolation), global::AuthorizationViolation.Parser, new[]{ "Violation" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthorizationChallengeRequest), global::AuthorizationChallengeRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthorizationChallengeResponse), global::AuthorizationChallengeResponse.Parser, new[]{ "Payload" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthorizationChallengeSubmit), global::AuthorizationChallengeSubmit.Parser, new[]{ "PublicKey", "Signature", "Roles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthorizationChallengeResult), global::AuthorizationChallengeResult.Parser, new[]{ "Roles" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum RoleType {
  [pbr::OriginalName("ROLE_TYPE_UNSET")] Unset = 0,
  /// <summary>
  /// A shorthand request for asking for all allowed roles.
  /// </summary>
  [pbr::OriginalName("ALL")] All = 1,
  /// <summary>
  /// Role defining validator to validator communication
  /// </summary>
  [pbr::OriginalName("NETWORK")] Network = 2,
}

#endregion

#region Messages
public sealed partial class ConnectionRequest : pb::IMessage<ConnectionRequest> {
  private static readonly pb::MessageParser<ConnectionRequest> _parser = new pb::MessageParser<ConnectionRequest>(() => new ConnectionRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ConnectionRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionRequest(ConnectionRequest other) : this() {
    endpoint_ = other.endpoint_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionRequest Clone() {
    return new ConnectionRequest(this);
  }

  /// <summary>Field number for the "endpoint" field.</summary>
  public const int EndpointFieldNumber = 1;
  private string endpoint_ = "";
  /// <summary>
  /// This is the first message that must be sent to start off authorization.
  /// The endpoint of the connection.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Endpoint {
    get { return endpoint_; }
    set {
      endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ConnectionRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ConnectionRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Endpoint != other.Endpoint) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Endpoint.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Endpoint);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Endpoint.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ConnectionRequest other) {
    if (other == null) {
      return;
    }
    if (other.Endpoint.Length != 0) {
      Endpoint = other.Endpoint;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Endpoint = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ConnectionResponse : pb::IMessage<ConnectionResponse> {
  private static readonly pb::MessageParser<ConnectionResponse> _parser = new pb::MessageParser<ConnectionResponse>(() => new ConnectionResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ConnectionResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionResponse(ConnectionResponse other) : this() {
    roles_ = other.roles_.Clone();
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ConnectionResponse Clone() {
    return new ConnectionResponse(this);
  }

  /// <summary>Field number for the "roles" field.</summary>
  public const int RolesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ConnectionResponse.Types.RoleEntry> _repeated_roles_codec
      = pb::FieldCodec.ForMessage(10, global::ConnectionResponse.Types.RoleEntry.Parser);
  private readonly pbc::RepeatedField<global::ConnectionResponse.Types.RoleEntry> roles_ = new pbc::RepeatedField<global::ConnectionResponse.Types.RoleEntry>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ConnectionResponse.Types.RoleEntry> Roles {
    get { return roles_; }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 2;
  private global::ConnectionResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ConnectionResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ConnectionResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ConnectionResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!roles_.Equals(other.roles_)) return false;
    if (Status != other.Status) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= roles_.GetHashCode();
    if (Status != 0) hash ^= Status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    roles_.WriteTo(output, _repeated_roles_codec);
    if (Status != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += roles_.CalculateSize(_repeated_roles_codec);
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ConnectionResponse other) {
    if (other == null) {
      return;
    }
    roles_.Add(other.roles_);
    if (other.Status != 0) {
      Status = other.Status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          roles_.AddEntriesFrom(input, _repeated_roles_codec);
          break;
        }
        case 16: {
          status_ = (global::ConnectionResponse.Types.Status) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ConnectionResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    /// <summary>
    /// Whether the connection can participate in authorization
    /// </summary>
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("ERROR")] Error = 2,
    }

    /// <summary>
    ///Authorization Type required for the authorization procedure
    /// </summary>
    public enum AuthorizationType {
      [pbr::OriginalName("AUTHORIZATION_TYPE_UNSET")] Unset = 0,
      [pbr::OriginalName("TRUST")] Trust = 1,
      [pbr::OriginalName("CHALLENGE")] Challenge = 2,
    }

    public sealed partial class RoleEntry : pb::IMessage<RoleEntry> {
      private static readonly pb::MessageParser<RoleEntry> _parser = new pb::MessageParser<RoleEntry>(() => new RoleEntry());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<RoleEntry> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ConnectionResponse.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public RoleEntry() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public RoleEntry(RoleEntry other) : this() {
        role_ = other.role_;
        authType_ = other.authType_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public RoleEntry Clone() {
        return new RoleEntry(this);
      }

      /// <summary>Field number for the "role" field.</summary>
      public const int RoleFieldNumber = 1;
      private global::RoleType role_ = 0;
      /// <summary>
      /// The role type for this role entry
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::RoleType Role {
        get { return role_; }
        set {
          role_ = value;
        }
      }

      /// <summary>Field number for the "auth_type" field.</summary>
      public const int AuthTypeFieldNumber = 2;
      private global::ConnectionResponse.Types.AuthorizationType authType_ = 0;
      /// <summary>
      /// The Authorization Type required for the above role
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public global::ConnectionResponse.Types.AuthorizationType AuthType {
        get { return authType_; }
        set {
          authType_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as RoleEntry);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(RoleEntry other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Role != other.Role) return false;
        if (AuthType != other.AuthType) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Role != 0) hash ^= Role.GetHashCode();
        if (AuthType != 0) hash ^= AuthType.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Role != 0) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Role);
        }
        if (AuthType != 0) {
          output.WriteRawTag(16);
          output.WriteEnum((int) AuthType);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Role != 0) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
        }
        if (AuthType != 0) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AuthType);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(RoleEntry other) {
        if (other == null) {
          return;
        }
        if (other.Role != 0) {
          Role = other.Role;
        }
        if (other.AuthType != 0) {
          AuthType = other.AuthType;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              role_ = (global::RoleType) input.ReadEnum();
              break;
            }
            case 16: {
              authType_ = (global::ConnectionResponse.Types.AuthorizationType) input.ReadEnum();
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

public sealed partial class AuthorizationTrustRequest : pb::IMessage<AuthorizationTrustRequest> {
  private static readonly pb::MessageParser<AuthorizationTrustRequest> _parser = new pb::MessageParser<AuthorizationTrustRequest>(() => new AuthorizationTrustRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AuthorizationTrustRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationTrustRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationTrustRequest(AuthorizationTrustRequest other) : this() {
    roles_ = other.roles_.Clone();
    publicKey_ = other.publicKey_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationTrustRequest Clone() {
    return new AuthorizationTrustRequest(this);
  }

  /// <summary>Field number for the "roles" field.</summary>
  public const int RolesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RoleType> _repeated_roles_codec
      = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::RoleType) x);
  private readonly pbc::RepeatedField<global::RoleType> roles_ = new pbc::RepeatedField<global::RoleType>();
  /// <summary>
  /// A set of requested RoleTypes
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RoleType> Roles {
    get { return roles_; }
  }

  /// <summary>Field number for the "public_key" field.</summary>
  public const int PublicKeyFieldNumber = 2;
  private string publicKey_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PublicKey {
    get { return publicKey_; }
    set {
      publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AuthorizationTrustRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AuthorizationTrustRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!roles_.Equals(other.roles_)) return false;
    if (PublicKey != other.PublicKey) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= roles_.GetHashCode();
    if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    roles_.WriteTo(output, _repeated_roles_codec);
    if (PublicKey.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PublicKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += roles_.CalculateSize(_repeated_roles_codec);
    if (PublicKey.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AuthorizationTrustRequest other) {
    if (other == null) {
      return;
    }
    roles_.Add(other.roles_);
    if (other.PublicKey.Length != 0) {
      PublicKey = other.PublicKey;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          roles_.AddEntriesFrom(input, _repeated_roles_codec);
          break;
        }
        case 18: {
          PublicKey = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class AuthorizationTrustResponse : pb::IMessage<AuthorizationTrustResponse> {
  private static readonly pb::MessageParser<AuthorizationTrustResponse> _parser = new pb::MessageParser<AuthorizationTrustResponse>(() => new AuthorizationTrustResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AuthorizationTrustResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationTrustResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationTrustResponse(AuthorizationTrustResponse other) : this() {
    roles_ = other.roles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationTrustResponse Clone() {
    return new AuthorizationTrustResponse(this);
  }

  /// <summary>Field number for the "roles" field.</summary>
  public const int RolesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RoleType> _repeated_roles_codec
      = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::RoleType) x);
  private readonly pbc::RepeatedField<global::RoleType> roles_ = new pbc::RepeatedField<global::RoleType>();
  /// <summary>
  /// The actual set the requester has access to
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RoleType> Roles {
    get { return roles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AuthorizationTrustResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AuthorizationTrustResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!roles_.Equals(other.roles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= roles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    roles_.WriteTo(output, _repeated_roles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += roles_.CalculateSize(_repeated_roles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AuthorizationTrustResponse other) {
    if (other == null) {
      return;
    }
    roles_.Add(other.roles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          roles_.AddEntriesFrom(input, _repeated_roles_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class AuthorizationViolation : pb::IMessage<AuthorizationViolation> {
  private static readonly pb::MessageParser<AuthorizationViolation> _parser = new pb::MessageParser<AuthorizationViolation>(() => new AuthorizationViolation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AuthorizationViolation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationViolation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationViolation(AuthorizationViolation other) : this() {
    violation_ = other.violation_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationViolation Clone() {
    return new AuthorizationViolation(this);
  }

  /// <summary>Field number for the "violation" field.</summary>
  public const int ViolationFieldNumber = 1;
  private global::RoleType violation_ = 0;
  /// <summary>
  /// The Role the requester did not have access to
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RoleType Violation {
    get { return violation_; }
    set {
      violation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AuthorizationViolation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AuthorizationViolation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Violation != other.Violation) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Violation != 0) hash ^= Violation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Violation != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Violation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Violation != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Violation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AuthorizationViolation other) {
    if (other == null) {
      return;
    }
    if (other.Violation != 0) {
      Violation = other.Violation;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          violation_ = (global::RoleType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Empty message sent to request a payload to sign
/// </summary>
public sealed partial class AuthorizationChallengeRequest : pb::IMessage<AuthorizationChallengeRequest> {
  private static readonly pb::MessageParser<AuthorizationChallengeRequest> _parser = new pb::MessageParser<AuthorizationChallengeRequest>(() => new AuthorizationChallengeRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AuthorizationChallengeRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeRequest(AuthorizationChallengeRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeRequest Clone() {
    return new AuthorizationChallengeRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AuthorizationChallengeRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AuthorizationChallengeRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AuthorizationChallengeRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class AuthorizationChallengeResponse : pb::IMessage<AuthorizationChallengeResponse> {
  private static readonly pb::MessageParser<AuthorizationChallengeResponse> _parser = new pb::MessageParser<AuthorizationChallengeResponse>(() => new AuthorizationChallengeResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AuthorizationChallengeResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeResponse(AuthorizationChallengeResponse other) : this() {
    payload_ = other.payload_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeResponse Clone() {
    return new AuthorizationChallengeResponse(this);
  }

  /// <summary>Field number for the "payload" field.</summary>
  public const int PayloadFieldNumber = 1;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  /// <summary>
  /// Random payload that the connecting node must sign
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Payload {
    get { return payload_; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AuthorizationChallengeResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AuthorizationChallengeResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Payload != other.Payload) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Payload.Length != 0) hash ^= Payload.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Payload.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Payload);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Payload.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AuthorizationChallengeResponse other) {
    if (other == null) {
      return;
    }
    if (other.Payload.Length != 0) {
      Payload = other.Payload;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Payload = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class AuthorizationChallengeSubmit : pb::IMessage<AuthorizationChallengeSubmit> {
  private static readonly pb::MessageParser<AuthorizationChallengeSubmit> _parser = new pb::MessageParser<AuthorizationChallengeSubmit>(() => new AuthorizationChallengeSubmit());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AuthorizationChallengeSubmit> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeSubmit() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeSubmit(AuthorizationChallengeSubmit other) : this() {
    publicKey_ = other.publicKey_;
    signature_ = other.signature_;
    roles_ = other.roles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeSubmit Clone() {
    return new AuthorizationChallengeSubmit(this);
  }

  /// <summary>Field number for the "public_key" field.</summary>
  public const int PublicKeyFieldNumber = 1;
  private string publicKey_ = "";
  /// <summary>
  /// public key of node
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PublicKey {
    get { return publicKey_; }
    set {
      publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 3;
  private string signature_ = "";
  /// <summary>
  /// signature derived from signing the challenge payload
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signature {
    get { return signature_; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roles" field.</summary>
  public const int RolesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::RoleType> _repeated_roles_codec
      = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::RoleType) x);
  private readonly pbc::RepeatedField<global::RoleType> roles_ = new pbc::RepeatedField<global::RoleType>();
  /// <summary>
  /// A set of requested Roles
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RoleType> Roles {
    get { return roles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AuthorizationChallengeSubmit);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AuthorizationChallengeSubmit other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PublicKey != other.PublicKey) return false;
    if (Signature != other.Signature) return false;
    if(!roles_.Equals(other.roles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
    if (Signature.Length != 0) hash ^= Signature.GetHashCode();
    hash ^= roles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PublicKey.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PublicKey);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Signature);
    }
    roles_.WriteTo(output, _repeated_roles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PublicKey.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
    }
    if (Signature.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
    }
    size += roles_.CalculateSize(_repeated_roles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AuthorizationChallengeSubmit other) {
    if (other == null) {
      return;
    }
    if (other.PublicKey.Length != 0) {
      PublicKey = other.PublicKey;
    }
    if (other.Signature.Length != 0) {
      Signature = other.Signature;
    }
    roles_.Add(other.roles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PublicKey = input.ReadString();
          break;
        }
        case 26: {
          Signature = input.ReadString();
          break;
        }
        case 34:
        case 32: {
          roles_.AddEntriesFrom(input, _repeated_roles_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class AuthorizationChallengeResult : pb::IMessage<AuthorizationChallengeResult> {
  private static readonly pb::MessageParser<AuthorizationChallengeResult> _parser = new pb::MessageParser<AuthorizationChallengeResult>(() => new AuthorizationChallengeResult());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AuthorizationChallengeResult> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AuthorizationReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeResult() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeResult(AuthorizationChallengeResult other) : this() {
    roles_ = other.roles_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthorizationChallengeResult Clone() {
    return new AuthorizationChallengeResult(this);
  }

  /// <summary>Field number for the "roles" field.</summary>
  public const int RolesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RoleType> _repeated_roles_codec
      = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::RoleType) x);
  private readonly pbc::RepeatedField<global::RoleType> roles_ = new pbc::RepeatedField<global::RoleType>();
  /// <summary>
  /// The approved roles for that connection
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RoleType> Roles {
    get { return roles_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AuthorizationChallengeResult);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AuthorizationChallengeResult other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!roles_.Equals(other.roles_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= roles_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    roles_.WriteTo(output, _repeated_roles_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += roles_.CalculateSize(_repeated_roles_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AuthorizationChallengeResult other) {
    if (other == null) {
      return;
    }
    roles_.Add(other.roles_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          roles_.AddEntriesFrom(input, _repeated_roles_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
