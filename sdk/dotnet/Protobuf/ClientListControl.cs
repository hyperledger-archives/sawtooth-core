// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client_list_control.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from client_list_control.proto</summary>
public static partial class ClientListControlReflection {

  #region Descriptor
  /// <summary>File descriptor for client_list_control.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientListControlReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChljbGllbnRfbGlzdF9jb250cm9sLnByb3RvIjQKFENsaWVudFBhZ2luZ0Nv",
          "bnRyb2xzEg0KBXN0YXJ0GAEgASgJEg0KBWxpbWl0GAIgASgFIkIKFENsaWVu",
          "dFBhZ2luZ1Jlc3BvbnNlEgwKBG5leHQYASABKAkSDQoFc3RhcnQYAiABKAkS",
          "DQoFbGltaXQYAyABKAUiMwoSQ2xpZW50U29ydENvbnRyb2xzEgwKBGtleXMY",
          "ASADKAkSDwoHcmV2ZXJzZRgCIAEoCEIyChVzYXd0b290aC5zZGsucHJvdG9i",
          "dWZQAVoXY2xpZW50X2xpc3RfY29udHJvbF9wYjJiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientPagingControls), global::ClientPagingControls.Parser, new[]{ "Start", "Limit" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientPagingResponse), global::ClientPagingResponse.Parser, new[]{ "Next", "Start", "Limit" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientSortControls), global::ClientSortControls.Parser, new[]{ "Keys", "Reverse" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// Paging controls to be sent with List requests.
/// Attributes:
///     start: The id of a resource to start the page with
///     limit: The number of results per page, defaults to 100 and maxes out at 1000
/// </summary>
public sealed partial class ClientPagingControls : pb::IMessage<ClientPagingControls> {
  private static readonly pb::MessageParser<ClientPagingControls> _parser = new pb::MessageParser<ClientPagingControls>(() => new ClientPagingControls());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientPagingControls> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientListControlReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientPagingControls() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientPagingControls(ClientPagingControls other) : this() {
    start_ = other.start_;
    limit_ = other.limit_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientPagingControls Clone() {
    return new ClientPagingControls(this);
  }

  /// <summary>Field number for the "start" field.</summary>
  public const int StartFieldNumber = 1;
  private string start_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Start {
    get { return start_; }
    set {
      start_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "limit" field.</summary>
  public const int LimitFieldNumber = 2;
  private int limit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Limit {
    get { return limit_; }
    set {
      limit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientPagingControls);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientPagingControls other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Start != other.Start) return false;
    if (Limit != other.Limit) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Start.Length != 0) hash ^= Start.GetHashCode();
    if (Limit != 0) hash ^= Limit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Start.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Start);
    }
    if (Limit != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Limit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Start.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Start);
    }
    if (Limit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientPagingControls other) {
    if (other == null) {
      return;
    }
    if (other.Start.Length != 0) {
      Start = other.Start;
    }
    if (other.Limit != 0) {
      Limit = other.Limit;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Start = input.ReadString();
          break;
        }
        case 16: {
          Limit = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Information about the pagination used, sent back with List responses.
/// Attributes:
///     next: The id of the first resource in the next page
///     start: The id of the first resource in the returned page
///     limit: The number of results per page, defaults to 100 and maxes out at 1000
/// </summary>
public sealed partial class ClientPagingResponse : pb::IMessage<ClientPagingResponse> {
  private static readonly pb::MessageParser<ClientPagingResponse> _parser = new pb::MessageParser<ClientPagingResponse>(() => new ClientPagingResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientPagingResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientListControlReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientPagingResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientPagingResponse(ClientPagingResponse other) : this() {
    next_ = other.next_;
    start_ = other.start_;
    limit_ = other.limit_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientPagingResponse Clone() {
    return new ClientPagingResponse(this);
  }

  /// <summary>Field number for the "next" field.</summary>
  public const int NextFieldNumber = 1;
  private string next_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Next {
    get { return next_; }
    set {
      next_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "start" field.</summary>
  public const int StartFieldNumber = 2;
  private string start_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Start {
    get { return start_; }
    set {
      start_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "limit" field.</summary>
  public const int LimitFieldNumber = 3;
  private int limit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Limit {
    get { return limit_; }
    set {
      limit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientPagingResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientPagingResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Next != other.Next) return false;
    if (Start != other.Start) return false;
    if (Limit != other.Limit) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Next.Length != 0) hash ^= Next.GetHashCode();
    if (Start.Length != 0) hash ^= Start.GetHashCode();
    if (Limit != 0) hash ^= Limit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Next.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Next);
    }
    if (Start.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Start);
    }
    if (Limit != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Limit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Next.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Next);
    }
    if (Start.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Start);
    }
    if (Limit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientPagingResponse other) {
    if (other == null) {
      return;
    }
    if (other.Next.Length != 0) {
      Next = other.Next;
    }
    if (other.Start.Length != 0) {
      Start = other.Start;
    }
    if (other.Limit != 0) {
      Limit = other.Limit;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Next = input.ReadString();
          break;
        }
        case 18: {
          Start = input.ReadString();
          break;
        }
        case 24: {
          Limit = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Sorting controls to be sent with List requests. More than one can be sent.
/// If so, the first is used, and additional controls are tie-breakers.
/// Attributes:
///     keys: Nested set of keys to sort by (i.e. ['default, block_num'])
///     reverse: Whether or not to reverse the sort (i.e. descending order)
/// </summary>
public sealed partial class ClientSortControls : pb::IMessage<ClientSortControls> {
  private static readonly pb::MessageParser<ClientSortControls> _parser = new pb::MessageParser<ClientSortControls>(() => new ClientSortControls());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientSortControls> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientListControlReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientSortControls() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientSortControls(ClientSortControls other) : this() {
    keys_ = other.keys_.Clone();
    reverse_ = other.reverse_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientSortControls Clone() {
    return new ClientSortControls(this);
  }

  /// <summary>Field number for the "keys" field.</summary>
  public const int KeysFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_keys_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Keys {
    get { return keys_; }
  }

  /// <summary>Field number for the "reverse" field.</summary>
  public const int ReverseFieldNumber = 2;
  private bool reverse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Reverse {
    get { return reverse_; }
    set {
      reverse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientSortControls);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientSortControls other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!keys_.Equals(other.keys_)) return false;
    if (Reverse != other.Reverse) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= keys_.GetHashCode();
    if (Reverse != false) hash ^= Reverse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    keys_.WriteTo(output, _repeated_keys_codec);
    if (Reverse != false) {
      output.WriteRawTag(16);
      output.WriteBool(Reverse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += keys_.CalculateSize(_repeated_keys_codec);
    if (Reverse != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientSortControls other) {
    if (other == null) {
      return;
    }
    keys_.Add(other.keys_);
    if (other.Reverse != false) {
      Reverse = other.Reverse;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          keys_.AddEntriesFrom(input, _repeated_keys_codec);
          break;
        }
        case 16: {
          Reverse = input.ReadBool();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
