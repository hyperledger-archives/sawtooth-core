// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: validator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from validator.proto</summary>
public static partial class ValidatorReflection {

  #region Descriptor
  /// <summary>File descriptor for validator.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ValidatorReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg92YWxpZGF0b3IucHJvdG8iKQoLTWVzc2FnZUxpc3QSGgoIbWVzc2FnZXMY",
          "ASADKAsyCC5NZXNzYWdlIvETCgdNZXNzYWdlEioKDG1lc3NhZ2VfdHlwZRgB",
          "IAEoDjIULk1lc3NhZ2UuTWVzc2FnZVR5cGUSFgoOY29ycmVsYXRpb25faWQY",
          "AiABKAkSDwoHY29udGVudBgDIAEoDCKQEwoLTWVzc2FnZVR5cGUSCwoHREVG",
          "QVVMVBAAEhcKE1RQX1JFR0lTVEVSX1JFUVVFU1QQARIYChRUUF9SRUdJU1RF",
          "Ul9SRVNQT05TRRACEhkKFVRQX1VOUkVHSVNURVJfUkVRVUVTVBADEhoKFlRQ",
          "X1VOUkVHSVNURVJfUkVTUE9OU0UQBBIWChJUUF9QUk9DRVNTX1JFUVVFU1QQ",
          "BRIXChNUUF9QUk9DRVNTX1JFU1BPTlNFEAYSGAoUVFBfU1RBVEVfR0VUX1JF",
          "UVVFU1QQBxIZChVUUF9TVEFURV9HRVRfUkVTUE9OU0UQCBIYChRUUF9TVEFU",
          "RV9TRVRfUkVRVUVTVBAJEhkKFVRQX1NUQVRFX1NFVF9SRVNQT05TRRAKEhsK",
          "F1RQX1NUQVRFX0RFTEVURV9SRVFVRVNUEAsSHAoYVFBfU1RBVEVfREVMRVRF",
          "X1JFU1BPTlNFEAwSHwobVFBfUkVDRUlQVF9BRERfREFUQV9SRVFVRVNUEA0S",
          "IAocVFBfUkVDRUlQVF9BRERfREFUQV9SRVNQT05TRRAOEhgKFFRQX0VWRU5U",
          "X0FERF9SRVFVRVNUEA8SGQoVVFBfRVZFTlRfQUREX1JFU1BPTlNFEBASHwob",
          "Q0xJRU5UX0JBVENIX1NVQk1JVF9SRVFVRVNUEGQSIAocQ0xJRU5UX0JBVENI",
          "X1NVQk1JVF9SRVNQT05TRRBlEh0KGUNMSUVOVF9CTE9DS19MSVNUX1JFUVVF",
          "U1QQZhIeChpDTElFTlRfQkxPQ0tfTElTVF9SRVNQT05TRRBnEiIKHkNMSUVO",
          "VF9CTE9DS19HRVRfQllfSURfUkVRVUVTVBBoEh0KGUNMSUVOVF9CTE9DS19H",
          "RVRfUkVTUE9OU0UQaRIdChlDTElFTlRfQkFUQ0hfTElTVF9SRVFVRVNUEGoS",
          "HgoaQ0xJRU5UX0JBVENIX0xJU1RfUkVTUE9OU0UQaxIcChhDTElFTlRfQkFU",
          "Q0hfR0VUX1JFUVVFU1QQbBIdChlDTElFTlRfQkFUQ0hfR0VUX1JFU1BPTlNF",
          "EG0SIwofQ0xJRU5UX1RSQU5TQUNUSU9OX0xJU1RfUkVRVUVTVBBuEiQKIENM",
          "SUVOVF9UUkFOU0FDVElPTl9MSVNUX1JFU1BPTlNFEG8SIgoeQ0xJRU5UX1RS",
          "QU5TQUNUSU9OX0dFVF9SRVFVRVNUEHASIwofQ0xJRU5UX1RSQU5TQUNUSU9O",
          "X0dFVF9SRVNQT05TRRBxEiAKHENMSUVOVF9TVEFURV9DVVJSRU5UX1JFUVVF",
          "U1QQchIhCh1DTElFTlRfU1RBVEVfQ1VSUkVOVF9SRVNQT05TRRBzEh0KGUNM",
          "SUVOVF9TVEFURV9MSVNUX1JFUVVFU1QQdBIeChpDTElFTlRfU1RBVEVfTElT",
          "VF9SRVNQT05TRRB1EhwKGENMSUVOVF9TVEFURV9HRVRfUkVRVUVTVBB2Eh0K",
          "GUNMSUVOVF9TVEFURV9HRVRfUkVTUE9OU0UQdxIfChtDTElFTlRfQkFUQ0hf",
          "U1RBVFVTX1JFUVVFU1QQeBIgChxDTElFTlRfQkFUQ0hfU1RBVFVTX1JFU1BP",
          "TlNFEHkSHgoaQ0xJRU5UX1JFQ0VJUFRfR0VUX1JFUVVFU1QQehIfChtDTElF",
          "TlRfUkVDRUlQVF9HRVRfUkVTUE9OU0UQexIjCh9DTElFTlRfQkxPQ0tfR0VU",
          "X0JZX05VTV9SRVFVRVNUEHwSHAoYQ0xJRU5UX1BFRVJTX0dFVF9SRVFVRVNU",
          "EH0SHQoZQ0xJRU5UX1BFRVJTX0dFVF9SRVNQT05TRRB+Ei4KKkNMSUVOVF9C",
          "TE9DS19HRVRfQllfVFJBTlNBQ1RJT05fSURfUkVRVUVTVBB/EikKJENMSUVO",
          "VF9CTE9DS19HRVRfQllfQkFUQ0hfSURfUkVRVUVTVBCAARIeChlDTElFTlRf",
          "U1RBVFVTX0dFVF9SRVFVRVNUEIEBEh8KGkNMSUVOVF9TVEFUVVNfR0VUX1JF",
          "U1BPTlNFEIIBEiQKH0NMSUVOVF9FVkVOVFNfU1VCU0NSSUJFX1JFUVVFU1QQ",
          "9AMSJQogQ0xJRU5UX0VWRU5UU19TVUJTQ1JJQkVfUkVTUE9OU0UQ9QMSJgoh",
          "Q0xJRU5UX0VWRU5UU19VTlNVQlNDUklCRV9SRVFVRVNUEPYDEicKIkNMSUVO",
          "VF9FVkVOVFNfVU5TVUJTQ1JJQkVfUkVTUE9OU0UQ9wMSEgoNQ0xJRU5UX0VW",
          "RU5UUxD4AxIeChlDTElFTlRfRVZFTlRTX0dFVF9SRVFVRVNUEPkDEh8KGkNM",
          "SUVOVF9FVkVOVFNfR0VUX1JFU1BPTlNFEPoDEhMKDkdPU1NJUF9NRVNTQUdF",
          "EMgBEhQKD0dPU1NJUF9SRUdJU1RFUhDJARIWChFHT1NTSVBfVU5SRUdJU1RF",
          "UhDKARIZChRHT1NTSVBfQkxPQ0tfUkVRVUVTVBDNARIaChVHT1NTSVBfQkxP",
          "Q0tfUkVTUE9OU0UQzgESJQogR09TU0lQX0JBVENIX0JZX0JBVENIX0lEX1JF",
          "UVVFU1QQzwESKwomR09TU0lQX0JBVENIX0JZX1RSQU5TQUNUSU9OX0lEX1JF",
          "UVVFU1QQ0AESGgoVR09TU0lQX0JBVENIX1JFU1BPTlNFENEBEh0KGEdPU1NJ",
          "UF9HRVRfUEVFUlNfUkVRVUVTVBDSARIeChlHT1NTSVBfR0VUX1BFRVJTX1JF",
          "U1BPTlNFENMBEhAKC05FVFdPUktfQUNLEKwCEhQKD05FVFdPUktfQ09OTkVD",
          "VBCtAhIXChJORVRXT1JLX0RJU0NPTk5FQ1QQrgISJgohQVVUSE9SSVpBVElP",
          "Tl9DT05ORUNUSU9OX1JFU1BPTlNFENgEEhwKF0FVVEhPUklaQVRJT05fVklP",
          "TEFUSU9OENkEEiAKG0FVVEhPUklaQVRJT05fVFJVU1RfUkVRVUVTVBDaBBIh",
          "ChxBVVRIT1JJWkFUSU9OX1RSVVNUX1JFU1BPTlNFENsEEiQKH0FVVEhPUkla",
          "QVRJT05fQ0hBTExFTkdFX1JFUVVFU1QQ3AQSJQogQVVUSE9SSVpBVElPTl9D",
          "SEFMTEVOR0VfUkVTUE9OU0UQ3QQSIwoeQVVUSE9SSVpBVElPTl9DSEFMTEVO",
          "R0VfU1VCTUlUEN4EEiMKHkFVVEhPUklaQVRJT05fQ0hBTExFTkdFX1JFU1VM",
          "VBDfBBIRCgxQSU5HX1JFUVVFU1QQvAUSEgoNUElOR19SRVNQT05TRRC9BUIo",
          "ChVzYXd0b290aC5zZGsucHJvdG9idWZQAVoNdmFsaWRhdG9yX3BiMmIGcHJv",
          "dG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MessageList), global::MessageList.Parser, new[]{ "Messages" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Message), global::Message.Parser, new[]{ "MessageType", "CorrelationId", "Content" }, null, new[]{ typeof(global::Message.Types.MessageType) }, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// A list of messages to be transmitted together.
/// </summary>
public sealed partial class MessageList : pb::IMessage<MessageList> {
  private static readonly pb::MessageParser<MessageList> _parser = new pb::MessageParser<MessageList>(() => new MessageList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MessageList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ValidatorReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageList(MessageList other) : this() {
    messages_ = other.messages_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageList Clone() {
    return new MessageList(this);
  }

  /// <summary>Field number for the "messages" field.</summary>
  public const int MessagesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Message> _repeated_messages_codec
      = pb::FieldCodec.ForMessage(10, global::Message.Parser);
  private readonly pbc::RepeatedField<global::Message> messages_ = new pbc::RepeatedField<global::Message>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Message> Messages {
    get { return messages_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MessageList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MessageList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!messages_.Equals(other.messages_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= messages_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    messages_.WriteTo(output, _repeated_messages_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += messages_.CalculateSize(_repeated_messages_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MessageList other) {
    if (other == null) {
      return;
    }
    messages_.Add(other.messages_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          messages_.AddEntriesFrom(input, _repeated_messages_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// The message passed between the validator and client, containing the
/// header fields and content.
/// </summary>
public sealed partial class Message : pb::IMessage<Message> {
  private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Message> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ValidatorReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Message() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Message(Message other) : this() {
    messageType_ = other.messageType_;
    correlationId_ = other.correlationId_;
    content_ = other.content_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Message Clone() {
    return new Message(this);
  }

  /// <summary>Field number for the "message_type" field.</summary>
  public const int MessageTypeFieldNumber = 1;
  private global::Message.Types.MessageType messageType_ = 0;
  /// <summary>
  /// The type of message, used to determine how to 'route' the message
  /// to the appropriate handler as well as how to deserialize the
  /// content.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Message.Types.MessageType MessageType {
    get { return messageType_; }
    set {
      messageType_ = value;
    }
  }

  /// <summary>Field number for the "correlation_id" field.</summary>
  public const int CorrelationIdFieldNumber = 2;
  private string correlationId_ = "";
  /// <summary>
  /// The identifier used to correlate response messages to their related
  /// request messages.  correlation_id should be set to a random string
  /// for messages which are not responses to previously sent messages.  For
  /// response messages, correlation_id should be set to the same string as
  /// contained in the request message.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CorrelationId {
    get { return correlationId_; }
    set {
      correlationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 3;
  private pb::ByteString content_ = pb::ByteString.Empty;
  /// <summary>
  /// The content of the message, defined by message_type.  In many
  /// cases, this data has been serialized with Protocol Buffers or
  /// CBOR.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Message);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Message other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MessageType != other.MessageType) return false;
    if (CorrelationId != other.CorrelationId) return false;
    if (Content != other.Content) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MessageType != 0) hash ^= MessageType.GetHashCode();
    if (CorrelationId.Length != 0) hash ^= CorrelationId.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MessageType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) MessageType);
    }
    if (CorrelationId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CorrelationId);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Content);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MessageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
    }
    if (CorrelationId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrelationId);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Message other) {
    if (other == null) {
      return;
    }
    if (other.MessageType != 0) {
      MessageType = other.MessageType;
    }
    if (other.CorrelationId.Length != 0) {
      CorrelationId = other.CorrelationId;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          messageType_ = (global::Message.Types.MessageType) input.ReadEnum();
          break;
        }
        case 18: {
          CorrelationId = input.ReadString();
          break;
        }
        case 26: {
          Content = input.ReadBytes();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Message message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum MessageType {
      [pbr::OriginalName("DEFAULT")] Default = 0,
      /// <summary>
      /// Registration request from the transaction processor to the validator
      /// </summary>
      [pbr::OriginalName("TP_REGISTER_REQUEST")] TpRegisterRequest = 1,
      /// <summary>
      /// Registration response from the validator to the
      /// transaction processor
      /// </summary>
      [pbr::OriginalName("TP_REGISTER_RESPONSE")] TpRegisterResponse = 2,
      /// <summary>
      /// Tell the validator that the transaction processor
      /// won't take any more transactions
      /// </summary>
      [pbr::OriginalName("TP_UNREGISTER_REQUEST")] TpUnregisterRequest = 3,
      /// <summary>
      /// Response from the validator to the tp that it won't
      /// send any more transactions
      /// </summary>
      [pbr::OriginalName("TP_UNREGISTER_RESPONSE")] TpUnregisterResponse = 4,
      /// <summary>
      /// Process Request from the validator/executor to the
      /// transaction processor
      /// </summary>
      [pbr::OriginalName("TP_PROCESS_REQUEST")] TpProcessRequest = 5,
      /// <summary>
      /// Process response from the transaction processor to the validator/executor
      /// </summary>
      [pbr::OriginalName("TP_PROCESS_RESPONSE")] TpProcessResponse = 6,
      /// <summary>
      /// State get request from the transaction processor to validator/context_manager
      /// </summary>
      [pbr::OriginalName("TP_STATE_GET_REQUEST")] TpStateGetRequest = 7,
      /// <summary>
      /// State get response from the validator/context_manager to the transaction processor
      /// </summary>
      [pbr::OriginalName("TP_STATE_GET_RESPONSE")] TpStateGetResponse = 8,
      /// <summary>
      /// State set request from the transaction processor to the validator/context_manager
      /// </summary>
      [pbr::OriginalName("TP_STATE_SET_REQUEST")] TpStateSetRequest = 9,
      /// <summary>
      /// State set response from the validator/context_manager to the transaction processor
      /// </summary>
      [pbr::OriginalName("TP_STATE_SET_RESPONSE")] TpStateSetResponse = 10,
      /// <summary>
      /// State delete request from the transaction processor to the validator/context_manager
      /// </summary>
      [pbr::OriginalName("TP_STATE_DELETE_REQUEST")] TpStateDeleteRequest = 11,
      /// <summary>
      /// State delete response from the validator/context_manager to the transaction processor
      /// </summary>
      [pbr::OriginalName("TP_STATE_DELETE_RESPONSE")] TpStateDeleteResponse = 12,
      /// <summary>
      /// Message to append data to a transaction receipt
      /// </summary>
      [pbr::OriginalName("TP_RECEIPT_ADD_DATA_REQUEST")] TpReceiptAddDataRequest = 13,
      /// <summary>
      /// Response from validator to tell transaction processor that data has been appended
      /// </summary>
      [pbr::OriginalName("TP_RECEIPT_ADD_DATA_RESPONSE")] TpReceiptAddDataResponse = 14,
      /// <summary>
      /// Message to add event
      /// </summary>
      [pbr::OriginalName("TP_EVENT_ADD_REQUEST")] TpEventAddRequest = 15,
      /// <summary>
      /// Response from validator to tell transaction processor that event has been created
      /// </summary>
      [pbr::OriginalName("TP_EVENT_ADD_RESPONSE")] TpEventAddResponse = 16,
      /// <summary>
      /// Submission of a batchlist from the web api or another client to the validator
      /// </summary>
      [pbr::OriginalName("CLIENT_BATCH_SUBMIT_REQUEST")] ClientBatchSubmitRequest = 100,
      /// <summary>
      /// Response from the validator to the web api/client that the submission was accepted
      /// </summary>
      [pbr::OriginalName("CLIENT_BATCH_SUBMIT_RESPONSE")] ClientBatchSubmitResponse = 101,
      /// <summary>
      /// A request to list blocks from the web api/client to the validator
      /// </summary>
      [pbr::OriginalName("CLIENT_BLOCK_LIST_REQUEST")] ClientBlockListRequest = 102,
      [pbr::OriginalName("CLIENT_BLOCK_LIST_RESPONSE")] ClientBlockListResponse = 103,
      [pbr::OriginalName("CLIENT_BLOCK_GET_BY_ID_REQUEST")] ClientBlockGetByIdRequest = 104,
      [pbr::OriginalName("CLIENT_BLOCK_GET_RESPONSE")] ClientBlockGetResponse = 105,
      [pbr::OriginalName("CLIENT_BATCH_LIST_REQUEST")] ClientBatchListRequest = 106,
      [pbr::OriginalName("CLIENT_BATCH_LIST_RESPONSE")] ClientBatchListResponse = 107,
      [pbr::OriginalName("CLIENT_BATCH_GET_REQUEST")] ClientBatchGetRequest = 108,
      [pbr::OriginalName("CLIENT_BATCH_GET_RESPONSE")] ClientBatchGetResponse = 109,
      [pbr::OriginalName("CLIENT_TRANSACTION_LIST_REQUEST")] ClientTransactionListRequest = 110,
      [pbr::OriginalName("CLIENT_TRANSACTION_LIST_RESPONSE")] ClientTransactionListResponse = 111,
      [pbr::OriginalName("CLIENT_TRANSACTION_GET_REQUEST")] ClientTransactionGetRequest = 112,
      [pbr::OriginalName("CLIENT_TRANSACTION_GET_RESPONSE")] ClientTransactionGetResponse = 113,
      /// <summary>
      /// Client state request of the current state hash to be retrieved from the journal
      /// </summary>
      [pbr::OriginalName("CLIENT_STATE_CURRENT_REQUEST")] ClientStateCurrentRequest = 114,
      /// <summary>
      /// Response with the current state hash
      /// </summary>
      [pbr::OriginalName("CLIENT_STATE_CURRENT_RESPONSE")] ClientStateCurrentResponse = 115,
      /// <summary>
      /// A request of all the addresses under a particular prefix, for a state hash.
      /// </summary>
      [pbr::OriginalName("CLIENT_STATE_LIST_REQUEST")] ClientStateListRequest = 116,
      /// <summary>
      /// The response of the addresses
      /// </summary>
      [pbr::OriginalName("CLIENT_STATE_LIST_RESPONSE")] ClientStateListResponse = 117,
      /// <summary>
      /// Get the address:data entry at a particular address
      /// </summary>
      [pbr::OriginalName("CLIENT_STATE_GET_REQUEST")] ClientStateGetRequest = 118,
      /// <summary>
      /// The response with the entry
      /// </summary>
      [pbr::OriginalName("CLIENT_STATE_GET_RESPONSE")] ClientStateGetResponse = 119,
      /// <summary>
      /// A request for the status of a batch or batches
      /// </summary>
      [pbr::OriginalName("CLIENT_BATCH_STATUS_REQUEST")] ClientBatchStatusRequest = 120,
      /// <summary>
      /// A response with the batch statuses
      /// </summary>
      [pbr::OriginalName("CLIENT_BATCH_STATUS_RESPONSE")] ClientBatchStatusResponse = 121,
      /// <summary>
      /// A request for one or more transaction receipts
      /// </summary>
      [pbr::OriginalName("CLIENT_RECEIPT_GET_REQUEST")] ClientReceiptGetRequest = 122,
      /// <summary>
      /// A response with the receipts
      /// </summary>
      [pbr::OriginalName("CLIENT_RECEIPT_GET_RESPONSE")] ClientReceiptGetResponse = 123,
      [pbr::OriginalName("CLIENT_BLOCK_GET_BY_NUM_REQUEST")] ClientBlockGetByNumRequest = 124,
      /// <summary>
      /// A request for a validator's peers
      /// </summary>
      [pbr::OriginalName("CLIENT_PEERS_GET_REQUEST")] ClientPeersGetRequest = 125,
      /// <summary>
      /// A response with the validator's peers
      /// </summary>
      [pbr::OriginalName("CLIENT_PEERS_GET_RESPONSE")] ClientPeersGetResponse = 126,
      [pbr::OriginalName("CLIENT_BLOCK_GET_BY_TRANSACTION_ID_REQUEST")] ClientBlockGetByTransactionIdRequest = 127,
      [pbr::OriginalName("CLIENT_BLOCK_GET_BY_BATCH_ID_REQUEST")] ClientBlockGetByBatchIdRequest = 128,
      /// <summary>
      /// A request for a validator's status
      /// </summary>
      [pbr::OriginalName("CLIENT_STATUS_GET_REQUEST")] ClientStatusGetRequest = 129,
      /// <summary>
      /// A response with the validator's status
      /// </summary>
      [pbr::OriginalName("CLIENT_STATUS_GET_RESPONSE")] ClientStatusGetResponse = 130,
      /// <summary>
      /// Message types for events
      /// </summary>
      [pbr::OriginalName("CLIENT_EVENTS_SUBSCRIBE_REQUEST")] ClientEventsSubscribeRequest = 500,
      [pbr::OriginalName("CLIENT_EVENTS_SUBSCRIBE_RESPONSE")] ClientEventsSubscribeResponse = 501,
      [pbr::OriginalName("CLIENT_EVENTS_UNSUBSCRIBE_REQUEST")] ClientEventsUnsubscribeRequest = 502,
      [pbr::OriginalName("CLIENT_EVENTS_UNSUBSCRIBE_RESPONSE")] ClientEventsUnsubscribeResponse = 503,
      [pbr::OriginalName("CLIENT_EVENTS")] ClientEvents = 504,
      [pbr::OriginalName("CLIENT_EVENTS_GET_REQUEST")] ClientEventsGetRequest = 505,
      [pbr::OriginalName("CLIENT_EVENTS_GET_RESPONSE")] ClientEventsGetResponse = 506,
      /// <summary>
      /// Temp message types until a discussion can be had about gossip msg
      /// </summary>
      [pbr::OriginalName("GOSSIP_MESSAGE")] GossipMessage = 200,
      [pbr::OriginalName("GOSSIP_REGISTER")] GossipRegister = 201,
      [pbr::OriginalName("GOSSIP_UNREGISTER")] GossipUnregister = 202,
      [pbr::OriginalName("GOSSIP_BLOCK_REQUEST")] GossipBlockRequest = 205,
      [pbr::OriginalName("GOSSIP_BLOCK_RESPONSE")] GossipBlockResponse = 206,
      [pbr::OriginalName("GOSSIP_BATCH_BY_BATCH_ID_REQUEST")] GossipBatchByBatchIdRequest = 207,
      [pbr::OriginalName("GOSSIP_BATCH_BY_TRANSACTION_ID_REQUEST")] GossipBatchByTransactionIdRequest = 208,
      [pbr::OriginalName("GOSSIP_BATCH_RESPONSE")] GossipBatchResponse = 209,
      [pbr::OriginalName("GOSSIP_GET_PEERS_REQUEST")] GossipGetPeersRequest = 210,
      [pbr::OriginalName("GOSSIP_GET_PEERS_RESPONSE")] GossipGetPeersResponse = 211,
      [pbr::OriginalName("NETWORK_ACK")] NetworkAck = 300,
      [pbr::OriginalName("NETWORK_CONNECT")] NetworkConnect = 301,
      [pbr::OriginalName("NETWORK_DISCONNECT")] NetworkDisconnect = 302,
      /// <summary>
      /// Message types for Authorization Types
      /// </summary>
      [pbr::OriginalName("AUTHORIZATION_CONNECTION_RESPONSE")] AuthorizationConnectionResponse = 600,
      [pbr::OriginalName("AUTHORIZATION_VIOLATION")] AuthorizationViolation = 601,
      [pbr::OriginalName("AUTHORIZATION_TRUST_REQUEST")] AuthorizationTrustRequest = 602,
      [pbr::OriginalName("AUTHORIZATION_TRUST_RESPONSE")] AuthorizationTrustResponse = 603,
      [pbr::OriginalName("AUTHORIZATION_CHALLENGE_REQUEST")] AuthorizationChallengeRequest = 604,
      [pbr::OriginalName("AUTHORIZATION_CHALLENGE_RESPONSE")] AuthorizationChallengeResponse = 605,
      [pbr::OriginalName("AUTHORIZATION_CHALLENGE_SUBMIT")] AuthorizationChallengeSubmit = 606,
      [pbr::OriginalName("AUTHORIZATION_CHALLENGE_RESULT")] AuthorizationChallengeResult = 607,
      [pbr::OriginalName("PING_REQUEST")] PingRequest = 700,
      [pbr::OriginalName("PING_RESPONSE")] PingResponse = 701,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
