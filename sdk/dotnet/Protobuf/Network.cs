// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: network.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from network.proto</summary>
public static partial class NetworkReflection {

  #region Descriptor
  /// <summary>File descriptor for network.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static NetworkReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1uZXR3b3JrLnByb3RvIhMKEURpc2Nvbm5lY3RNZXNzYWdlIkEKE1BlZXJS",
          "ZWdpc3RlclJlcXVlc3QSEAoIZW5kcG9pbnQYASABKAkSGAoQcHJvdG9jb2xf",
          "dmVyc2lvbhgCIAEoDSIXChVQZWVyVW5yZWdpc3RlclJlcXVlc3QiEQoPR2V0",
          "UGVlcnNSZXF1ZXN0IioKEEdldFBlZXJzUmVzcG9uc2USFgoOcGVlcl9lbmRw",
          "b2ludHMYASADKAkiDQoLUGluZ1JlcXVlc3QiDgoMUGluZ1Jlc3BvbnNlIqUB",
          "Cg1Hb3NzaXBNZXNzYWdlEg8KB2NvbnRlbnQYASABKAwSMAoMY29udGVudF90",
          "eXBlGAIgASgOMhouR29zc2lwTWVzc2FnZS5Db250ZW50VHlwZRIUCgx0aW1l",
          "X3RvX2xpdmUYAyABKA0iOwoLQ29udGVudFR5cGUSFgoSQ09OVEVOVF9UWVBF",
          "X1VOU0VUEAASCQoFQkxPQ0sQARIJCgVCQVRDSBACIncKFk5ldHdvcmtBY2tu",
          "b3dsZWRnZW1lbnQSLgoGc3RhdHVzGAEgASgOMh4uTmV0d29ya0Fja25vd2xl",
          "ZGdlbWVudC5TdGF0dXMiLQoGU3RhdHVzEhAKDFNUQVRVU19VTlNFVBAAEgYK",
          "Ak9LEAESCQoFRVJST1IQAiJLChJHb3NzaXBCbG9ja1JlcXVlc3QSEAoIYmxv",
          "Y2tfaWQYASABKAkSDQoFbm9uY2UYAiABKAkSFAoMdGltZV90b19saXZlGAMg",
          "ASgNIiYKE0dvc3NpcEJsb2NrUmVzcG9uc2USDwoHY29udGVudBgBIAEoDCIm",
          "ChNHb3NzaXBCYXRjaFJlc3BvbnNlEg8KB2NvbnRlbnQYASABKAwiTgobR29z",
          "c2lwQmF0Y2hCeUJhdGNoSWRSZXF1ZXN0EgoKAmlkGAEgASgJEg0KBW5vbmNl",
          "GAIgASgJEhQKDHRpbWVfdG9fbGl2ZRgDIAEoDSJVCiFHb3NzaXBCYXRjaEJ5",
          "VHJhbnNhY3Rpb25JZFJlcXVlc3QSCwoDaWRzGAEgAygJEg0KBW5vbmNlGAIg",
          "ASgJEhQKDHRpbWVfdG9fbGl2ZRgDIAEoDUImChVzYXd0b290aC5zZGsucHJv",
          "dG9idWZQAVoLbmV0d29ya19wYjJiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::DisconnectMessage), global::DisconnectMessage.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PeerRegisterRequest), global::PeerRegisterRequest.Parser, new[]{ "Endpoint", "ProtocolVersion" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PeerUnregisterRequest), global::PeerUnregisterRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetPeersRequest), global::GetPeersRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetPeersResponse), global::GetPeersResponse.Parser, new[]{ "PeerEndpoints" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PingRequest), global::PingRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PingResponse), global::PingResponse.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GossipMessage), global::GossipMessage.Parser, new[]{ "Content", "ContentType", "TimeToLive" }, null, new[]{ typeof(global::GossipMessage.Types.ContentType) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NetworkAcknowledgement), global::NetworkAcknowledgement.Parser, new[]{ "Status" }, null, new[]{ typeof(global::NetworkAcknowledgement.Types.Status) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GossipBlockRequest), global::GossipBlockRequest.Parser, new[]{ "BlockId", "Nonce", "TimeToLive" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GossipBlockResponse), global::GossipBlockResponse.Parser, new[]{ "Content" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GossipBatchResponse), global::GossipBatchResponse.Parser, new[]{ "Content" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GossipBatchByBatchIdRequest), global::GossipBatchByBatchIdRequest.Parser, new[]{ "Id", "Nonce", "TimeToLive" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GossipBatchByTransactionIdRequest), global::GossipBatchByTransactionIdRequest.Parser, new[]{ "Ids", "Nonce", "TimeToLive" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// The disconnect message from a client to the server
/// </summary>
public sealed partial class DisconnectMessage : pb::IMessage<DisconnectMessage> {
  private static readonly pb::MessageParser<DisconnectMessage> _parser = new pb::MessageParser<DisconnectMessage>(() => new DisconnectMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DisconnectMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DisconnectMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DisconnectMessage(DisconnectMessage other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DisconnectMessage Clone() {
    return new DisconnectMessage(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DisconnectMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DisconnectMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DisconnectMessage other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// The registration request from a peer to the validator
/// </summary>
public sealed partial class PeerRegisterRequest : pb::IMessage<PeerRegisterRequest> {
  private static readonly pb::MessageParser<PeerRegisterRequest> _parser = new pb::MessageParser<PeerRegisterRequest>(() => new PeerRegisterRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PeerRegisterRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeerRegisterRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeerRegisterRequest(PeerRegisterRequest other) : this() {
    endpoint_ = other.endpoint_;
    protocolVersion_ = other.protocolVersion_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeerRegisterRequest Clone() {
    return new PeerRegisterRequest(this);
  }

  /// <summary>Field number for the "endpoint" field.</summary>
  public const int EndpointFieldNumber = 1;
  private string endpoint_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Endpoint {
    get { return endpoint_; }
    set {
      endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "protocol_version" field.</summary>
  public const int ProtocolVersionFieldNumber = 2;
  private uint protocolVersion_;
  /// <summary>
  /// The current version of the network protocol that is being used by the
  /// sender.  This version is an increasing value.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ProtocolVersion {
    get { return protocolVersion_; }
    set {
      protocolVersion_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PeerRegisterRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PeerRegisterRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Endpoint != other.Endpoint) return false;
    if (ProtocolVersion != other.ProtocolVersion) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
    if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Endpoint.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Endpoint);
    }
    if (ProtocolVersion != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Endpoint.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
    }
    if (ProtocolVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PeerRegisterRequest other) {
    if (other == null) {
      return;
    }
    if (other.Endpoint.Length != 0) {
      Endpoint = other.Endpoint;
    }
    if (other.ProtocolVersion != 0) {
      ProtocolVersion = other.ProtocolVersion;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Endpoint = input.ReadString();
          break;
        }
        case 16: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// The unregistration request from a peer to the validator
/// </summary>
public sealed partial class PeerUnregisterRequest : pb::IMessage<PeerUnregisterRequest> {
  private static readonly pb::MessageParser<PeerUnregisterRequest> _parser = new pb::MessageParser<PeerUnregisterRequest>(() => new PeerUnregisterRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PeerUnregisterRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeerUnregisterRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeerUnregisterRequest(PeerUnregisterRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PeerUnregisterRequest Clone() {
    return new PeerUnregisterRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PeerUnregisterRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PeerUnregisterRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PeerUnregisterRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class GetPeersRequest : pb::IMessage<GetPeersRequest> {
  private static readonly pb::MessageParser<GetPeersRequest> _parser = new pb::MessageParser<GetPeersRequest>(() => new GetPeersRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetPeersRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetPeersRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetPeersRequest(GetPeersRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetPeersRequest Clone() {
    return new GetPeersRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetPeersRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetPeersRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetPeersRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class GetPeersResponse : pb::IMessage<GetPeersResponse> {
  private static readonly pb::MessageParser<GetPeersResponse> _parser = new pb::MessageParser<GetPeersResponse>(() => new GetPeersResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetPeersResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetPeersResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetPeersResponse(GetPeersResponse other) : this() {
    peerEndpoints_ = other.peerEndpoints_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetPeersResponse Clone() {
    return new GetPeersResponse(this);
  }

  /// <summary>Field number for the "peer_endpoints" field.</summary>
  public const int PeerEndpointsFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_peerEndpoints_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> peerEndpoints_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> PeerEndpoints {
    get { return peerEndpoints_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetPeersResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetPeersResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!peerEndpoints_.Equals(other.peerEndpoints_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= peerEndpoints_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    peerEndpoints_.WriteTo(output, _repeated_peerEndpoints_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += peerEndpoints_.CalculateSize(_repeated_peerEndpoints_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetPeersResponse other) {
    if (other == null) {
      return;
    }
    peerEndpoints_.Add(other.peerEndpoints_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          peerEndpoints_.AddEntriesFrom(input, _repeated_peerEndpoints_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class PingRequest : pb::IMessage<PingRequest> {
  private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PingRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PingRequest(PingRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PingRequest Clone() {
    return new PingRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PingRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PingRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PingRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class PingResponse : pb::IMessage<PingResponse> {
  private static readonly pb::MessageParser<PingResponse> _parser = new pb::MessageParser<PingResponse>(() => new PingResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PingResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PingResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PingResponse(PingResponse other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PingResponse Clone() {
    return new PingResponse(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PingResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PingResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PingResponse other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class GossipMessage : pb::IMessage<GossipMessage> {
  private static readonly pb::MessageParser<GossipMessage> _parser = new pb::MessageParser<GossipMessage>(() => new GossipMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GossipMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipMessage(GossipMessage other) : this() {
    content_ = other.content_;
    contentType_ = other.contentType_;
    timeToLive_ = other.timeToLive_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipMessage Clone() {
    return new GossipMessage(this);
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 1;
  private pb::ByteString content_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "content_type" field.</summary>
  public const int ContentTypeFieldNumber = 2;
  private global::GossipMessage.Types.ContentType contentType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GossipMessage.Types.ContentType ContentType {
    get { return contentType_; }
    set {
      contentType_ = value;
    }
  }

  /// <summary>Field number for the "time_to_live" field.</summary>
  public const int TimeToLiveFieldNumber = 3;
  private uint timeToLive_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeToLive {
    get { return timeToLive_; }
    set {
      timeToLive_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GossipMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GossipMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Content != other.Content) return false;
    if (ContentType != other.ContentType) return false;
    if (TimeToLive != other.TimeToLive) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (ContentType != 0) hash ^= ContentType.GetHashCode();
    if (TimeToLive != 0) hash ^= TimeToLive.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Content.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Content);
    }
    if (ContentType != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ContentType);
    }
    if (TimeToLive != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(TimeToLive);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (ContentType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
    }
    if (TimeToLive != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeToLive);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GossipMessage other) {
    if (other == null) {
      return;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.ContentType != 0) {
      ContentType = other.ContentType;
    }
    if (other.TimeToLive != 0) {
      TimeToLive = other.TimeToLive;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Content = input.ReadBytes();
          break;
        }
        case 16: {
          contentType_ = (global::GossipMessage.Types.ContentType) input.ReadEnum();
          break;
        }
        case 24: {
          TimeToLive = input.ReadUInt32();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the GossipMessage message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum ContentType {
      [pbr::OriginalName("CONTENT_TYPE_UNSET")] Unset = 0,
      [pbr::OriginalName("BLOCK")] Block = 1,
      [pbr::OriginalName("BATCH")] Batch = 2,
    }

  }
  #endregion

}

/// <summary>
/// A response sent from the validator to the peer acknowledging message
/// receipt
/// </summary>
public sealed partial class NetworkAcknowledgement : pb::IMessage<NetworkAcknowledgement> {
  private static readonly pb::MessageParser<NetworkAcknowledgement> _parser = new pb::MessageParser<NetworkAcknowledgement>(() => new NetworkAcknowledgement());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NetworkAcknowledgement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NetworkAcknowledgement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NetworkAcknowledgement(NetworkAcknowledgement other) : this() {
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NetworkAcknowledgement Clone() {
    return new NetworkAcknowledgement(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::NetworkAcknowledgement.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::NetworkAcknowledgement.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NetworkAcknowledgement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NetworkAcknowledgement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NetworkAcknowledgement other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::NetworkAcknowledgement.Types.Status) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the NetworkAcknowledgement message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("ERROR")] Error = 2,
    }

  }
  #endregion

}

public sealed partial class GossipBlockRequest : pb::IMessage<GossipBlockRequest> {
  private static readonly pb::MessageParser<GossipBlockRequest> _parser = new pb::MessageParser<GossipBlockRequest>(() => new GossipBlockRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GossipBlockRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBlockRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBlockRequest(GossipBlockRequest other) : this() {
    blockId_ = other.blockId_;
    nonce_ = other.nonce_;
    timeToLive_ = other.timeToLive_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBlockRequest Clone() {
    return new GossipBlockRequest(this);
  }

  /// <summary>Field number for the "block_id" field.</summary>
  public const int BlockIdFieldNumber = 1;
  private string blockId_ = "";
  /// <summary>
  /// The id of the block that is being requested
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BlockId {
    get { return blockId_; }
    set {
      blockId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nonce" field.</summary>
  public const int NonceFieldNumber = 2;
  private string nonce_ = "";
  /// <summary>
  /// A random string that provides uniqueness for requests with
  /// otherwise identical fields.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nonce {
    get { return nonce_; }
    set {
      nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time_to_live" field.</summary>
  public const int TimeToLiveFieldNumber = 3;
  private uint timeToLive_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeToLive {
    get { return timeToLive_; }
    set {
      timeToLive_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GossipBlockRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GossipBlockRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BlockId != other.BlockId) return false;
    if (Nonce != other.Nonce) return false;
    if (TimeToLive != other.TimeToLive) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (BlockId.Length != 0) hash ^= BlockId.GetHashCode();
    if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
    if (TimeToLive != 0) hash ^= TimeToLive.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (BlockId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(BlockId);
    }
    if (Nonce.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nonce);
    }
    if (TimeToLive != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(TimeToLive);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (BlockId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BlockId);
    }
    if (Nonce.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
    }
    if (TimeToLive != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeToLive);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GossipBlockRequest other) {
    if (other == null) {
      return;
    }
    if (other.BlockId.Length != 0) {
      BlockId = other.BlockId;
    }
    if (other.Nonce.Length != 0) {
      Nonce = other.Nonce;
    }
    if (other.TimeToLive != 0) {
      TimeToLive = other.TimeToLive;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          BlockId = input.ReadString();
          break;
        }
        case 18: {
          Nonce = input.ReadString();
          break;
        }
        case 24: {
          TimeToLive = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GossipBlockResponse : pb::IMessage<GossipBlockResponse> {
  private static readonly pb::MessageParser<GossipBlockResponse> _parser = new pb::MessageParser<GossipBlockResponse>(() => new GossipBlockResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GossipBlockResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBlockResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBlockResponse(GossipBlockResponse other) : this() {
    content_ = other.content_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBlockResponse Clone() {
    return new GossipBlockResponse(this);
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 1;
  private pb::ByteString content_ = pb::ByteString.Empty;
  /// <summary>
  /// The block
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GossipBlockResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GossipBlockResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Content != other.Content) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Content.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Content);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GossipBlockResponse other) {
    if (other == null) {
      return;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Content = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class GossipBatchResponse : pb::IMessage<GossipBatchResponse> {
  private static readonly pb::MessageParser<GossipBatchResponse> _parser = new pb::MessageParser<GossipBatchResponse>(() => new GossipBatchResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GossipBatchResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchResponse(GossipBatchResponse other) : this() {
    content_ = other.content_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchResponse Clone() {
    return new GossipBatchResponse(this);
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 1;
  private pb::ByteString content_ = pb::ByteString.Empty;
  /// <summary>
  ///The batch
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GossipBatchResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GossipBatchResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Content != other.Content) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Content.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Content);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GossipBatchResponse other) {
    if (other == null) {
      return;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Content = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class GossipBatchByBatchIdRequest : pb::IMessage<GossipBatchByBatchIdRequest> {
  private static readonly pb::MessageParser<GossipBatchByBatchIdRequest> _parser = new pb::MessageParser<GossipBatchByBatchIdRequest>(() => new GossipBatchByBatchIdRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GossipBatchByBatchIdRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchByBatchIdRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchByBatchIdRequest(GossipBatchByBatchIdRequest other) : this() {
    id_ = other.id_;
    nonce_ = other.nonce_;
    timeToLive_ = other.timeToLive_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchByBatchIdRequest Clone() {
    return new GossipBatchByBatchIdRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  /// <summary>
  /// The id of the batch that is being requested
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nonce" field.</summary>
  public const int NonceFieldNumber = 2;
  private string nonce_ = "";
  /// <summary>
  /// A random string that provides uniqueness for requests with
  /// otherwise identical fields.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nonce {
    get { return nonce_; }
    set {
      nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time_to_live" field.</summary>
  public const int TimeToLiveFieldNumber = 3;
  private uint timeToLive_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeToLive {
    get { return timeToLive_; }
    set {
      timeToLive_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GossipBatchByBatchIdRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GossipBatchByBatchIdRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Nonce != other.Nonce) return false;
    if (TimeToLive != other.TimeToLive) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
    if (TimeToLive != 0) hash ^= TimeToLive.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Nonce.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nonce);
    }
    if (TimeToLive != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(TimeToLive);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Nonce.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
    }
    if (TimeToLive != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeToLive);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GossipBatchByBatchIdRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Nonce.Length != 0) {
      Nonce = other.Nonce;
    }
    if (other.TimeToLive != 0) {
      TimeToLive = other.TimeToLive;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Nonce = input.ReadString();
          break;
        }
        case 24: {
          TimeToLive = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GossipBatchByTransactionIdRequest : pb::IMessage<GossipBatchByTransactionIdRequest> {
  private static readonly pb::MessageParser<GossipBatchByTransactionIdRequest> _parser = new pb::MessageParser<GossipBatchByTransactionIdRequest>(() => new GossipBatchByTransactionIdRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GossipBatchByTransactionIdRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchByTransactionIdRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchByTransactionIdRequest(GossipBatchByTransactionIdRequest other) : this() {
    ids_ = other.ids_.Clone();
    nonce_ = other.nonce_;
    timeToLive_ = other.timeToLive_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GossipBatchByTransactionIdRequest Clone() {
    return new GossipBatchByTransactionIdRequest(this);
  }

  /// <summary>Field number for the "ids" field.</summary>
  public const int IdsFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_ids_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// The id's of the transaction that are in the batches requested
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Ids {
    get { return ids_; }
  }

  /// <summary>Field number for the "nonce" field.</summary>
  public const int NonceFieldNumber = 2;
  private string nonce_ = "";
  /// <summary>
  /// A random string that provides uniqueness for requests with
  /// otherwise identical fields.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nonce {
    get { return nonce_; }
    set {
      nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "time_to_live" field.</summary>
  public const int TimeToLiveFieldNumber = 3;
  private uint timeToLive_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeToLive {
    get { return timeToLive_; }
    set {
      timeToLive_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GossipBatchByTransactionIdRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GossipBatchByTransactionIdRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ids_.Equals(other.ids_)) return false;
    if (Nonce != other.Nonce) return false;
    if (TimeToLive != other.TimeToLive) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ids_.GetHashCode();
    if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
    if (TimeToLive != 0) hash ^= TimeToLive.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    ids_.WriteTo(output, _repeated_ids_codec);
    if (Nonce.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nonce);
    }
    if (TimeToLive != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(TimeToLive);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ids_.CalculateSize(_repeated_ids_codec);
    if (Nonce.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
    }
    if (TimeToLive != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeToLive);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GossipBatchByTransactionIdRequest other) {
    if (other == null) {
      return;
    }
    ids_.Add(other.ids_);
    if (other.Nonce.Length != 0) {
      Nonce = other.Nonce;
    }
    if (other.TimeToLive != 0) {
      TimeToLive = other.TimeToLive;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ids_.AddEntriesFrom(input, _repeated_ids_codec);
          break;
        }
        case 18: {
          Nonce = input.ReadString();
          break;
        }
        case 24: {
          TimeToLive = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
