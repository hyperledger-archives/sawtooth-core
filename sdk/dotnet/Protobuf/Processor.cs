// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: processor.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from processor.proto</summary>
public static partial class ProcessorReflection {

  #region Descriptor
  /// <summary>File descriptor for processor.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ProcessorReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9wcm9jZXNzb3IucHJvdG8aEXRyYW5zYWN0aW9uLnByb3RvIkgKEVRwUmVn",
          "aXN0ZXJSZXF1ZXN0Eg4KBmZhbWlseRgBIAEoCRIPCgd2ZXJzaW9uGAIgASgJ",
          "EhIKCm5hbWVzcGFjZXMYBCADKAkibwoSVHBSZWdpc3RlclJlc3BvbnNlEioK",
          "BnN0YXR1cxgBIAEoDjIaLlRwUmVnaXN0ZXJSZXNwb25zZS5TdGF0dXMiLQoG",
          "U3RhdHVzEhAKDFNUQVRVU19VTlNFVBAAEgYKAk9LEAESCQoFRVJST1IQAiIV",
          "ChNUcFVucmVnaXN0ZXJSZXF1ZXN0InMKFFRwVW5yZWdpc3RlclJlc3BvbnNl",
          "EiwKBnN0YXR1cxgBIAEoDjIcLlRwVW5yZWdpc3RlclJlc3BvbnNlLlN0YXR1",
          "cyItCgZTdGF0dXMSEAoMU1RBVFVTX1VOU0VUEAASBgoCT0sQARIJCgVFUlJP",
          "UhACIm4KEFRwUHJvY2Vzc1JlcXVlc3QSIgoGaGVhZGVyGAEgASgLMhIuVHJh",
          "bnNhY3Rpb25IZWFkZXISDwoHcGF5bG9hZBgCIAEoDBIRCglzaWduYXR1cmUY",
          "AyABKAkSEgoKY29udGV4dF9pZBgEIAEoCSK3AQoRVHBQcm9jZXNzUmVzcG9u",
          "c2USKQoGc3RhdHVzGAEgASgOMhkuVHBQcm9jZXNzUmVzcG9uc2UuU3RhdHVz",
          "Eg8KB21lc3NhZ2UYAiABKAkSFQoNZXh0ZW5kZWRfZGF0YRgDIAEoDCJPCgZT",
          "dGF0dXMSEAoMU1RBVFVTX1VOU0VUEAASBgoCT0sQARIXChNJTlZBTElEX1RS",
          "QU5TQUNUSU9OEAISEgoOSU5URVJOQUxfRVJST1IQA0IoChVzYXd0b290aC5z",
          "ZGsucHJvdG9idWZQAVoNcHJvY2Vzc29yX3BiMmIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::TransactionReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::TpRegisterRequest), global::TpRegisterRequest.Parser, new[]{ "Family", "Version", "Namespaces" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TpRegisterResponse), global::TpRegisterResponse.Parser, new[]{ "Status" }, null, new[]{ typeof(global::TpRegisterResponse.Types.Status) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TpUnregisterRequest), global::TpUnregisterRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TpUnregisterResponse), global::TpUnregisterResponse.Parser, new[]{ "Status" }, null, new[]{ typeof(global::TpUnregisterResponse.Types.Status) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TpProcessRequest), global::TpProcessRequest.Parser, new[]{ "Header", "Payload", "Signature", "ContextId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TpProcessResponse), global::TpProcessResponse.Parser, new[]{ "Status", "Message", "ExtendedData" }, null, new[]{ typeof(global::TpProcessResponse.Types.Status) }, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// The registration request from the transaction processor to the
/// validator/executor
/// </summary>
public sealed partial class TpRegisterRequest : pb::IMessage<TpRegisterRequest> {
  private static readonly pb::MessageParser<TpRegisterRequest> _parser = new pb::MessageParser<TpRegisterRequest>(() => new TpRegisterRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TpRegisterRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProcessorReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpRegisterRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpRegisterRequest(TpRegisterRequest other) : this() {
    family_ = other.family_;
    version_ = other.version_;
    namespaces_ = other.namespaces_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpRegisterRequest Clone() {
    return new TpRegisterRequest(this);
  }

  /// <summary>Field number for the "family" field.</summary>
  public const int FamilyFieldNumber = 1;
  private string family_ = "";
  /// <summary>
  /// A settled upon name for the capabilities of the transaction processor.
  /// For example: intkey, xo
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Family {
    get { return family_; }
    set {
      family_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 2;
  private string version_ = "";
  /// <summary>
  /// The version supported.  For example:
  ///      1.0  for version 1.0
  ///      2.1  for version 2.1
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Version {
    get { return version_; }
    set {
      version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "namespaces" field.</summary>
  public const int NamespacesFieldNumber = 4;
  private static readonly pb::FieldCodec<string> _repeated_namespaces_codec
      = pb::FieldCodec.ForString(34);
  private readonly pbc::RepeatedField<string> namespaces_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// The namespaces this transaction processor expects to interact with
  /// when processing transactions matching this specification; will be
  /// enforced by the state API on the validator.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Namespaces {
    get { return namespaces_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TpRegisterRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TpRegisterRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Family != other.Family) return false;
    if (Version != other.Version) return false;
    if(!namespaces_.Equals(other.namespaces_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Family.Length != 0) hash ^= Family.GetHashCode();
    if (Version.Length != 0) hash ^= Version.GetHashCode();
    hash ^= namespaces_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Family.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Family);
    }
    if (Version.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Version);
    }
    namespaces_.WriteTo(output, _repeated_namespaces_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Family.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Family);
    }
    if (Version.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
    }
    size += namespaces_.CalculateSize(_repeated_namespaces_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TpRegisterRequest other) {
    if (other == null) {
      return;
    }
    if (other.Family.Length != 0) {
      Family = other.Family;
    }
    if (other.Version.Length != 0) {
      Version = other.Version;
    }
    namespaces_.Add(other.namespaces_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Family = input.ReadString();
          break;
        }
        case 18: {
          Version = input.ReadString();
          break;
        }
        case 34: {
          namespaces_.AddEntriesFrom(input, _repeated_namespaces_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// A response sent from the validator to the transaction processor
/// acknowledging the registration
/// </summary>
public sealed partial class TpRegisterResponse : pb::IMessage<TpRegisterResponse> {
  private static readonly pb::MessageParser<TpRegisterResponse> _parser = new pb::MessageParser<TpRegisterResponse>(() => new TpRegisterResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TpRegisterResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProcessorReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpRegisterResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpRegisterResponse(TpRegisterResponse other) : this() {
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpRegisterResponse Clone() {
    return new TpRegisterResponse(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::TpRegisterResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TpRegisterResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TpRegisterResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TpRegisterResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TpRegisterResponse other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::TpRegisterResponse.Types.Status) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the TpRegisterResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("ERROR")] Error = 2,
    }

  }
  #endregion

}

/// <summary>
/// The unregistration request from the transaction processor to the
/// validator/executor. The correct handlers are determined from the
/// zeromq identity of the tp, on the validator side.
/// </summary>
public sealed partial class TpUnregisterRequest : pb::IMessage<TpUnregisterRequest> {
  private static readonly pb::MessageParser<TpUnregisterRequest> _parser = new pb::MessageParser<TpUnregisterRequest>(() => new TpUnregisterRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TpUnregisterRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProcessorReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpUnregisterRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpUnregisterRequest(TpUnregisterRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpUnregisterRequest Clone() {
    return new TpUnregisterRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TpUnregisterRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TpUnregisterRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TpUnregisterRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// A response sent from the validator to the transaction processor
/// acknowledging the unregistration
/// </summary>
public sealed partial class TpUnregisterResponse : pb::IMessage<TpUnregisterResponse> {
  private static readonly pb::MessageParser<TpUnregisterResponse> _parser = new pb::MessageParser<TpUnregisterResponse>(() => new TpUnregisterResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TpUnregisterResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProcessorReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpUnregisterResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpUnregisterResponse(TpUnregisterResponse other) : this() {
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpUnregisterResponse Clone() {
    return new TpUnregisterResponse(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::TpUnregisterResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TpUnregisterResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TpUnregisterResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TpUnregisterResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TpUnregisterResponse other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::TpUnregisterResponse.Types.Status) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the TpUnregisterResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("ERROR")] Error = 2,
    }

  }
  #endregion

}

/// <summary>
/// The request from the validator/executor of the transaction processor
/// to verify a transaction.
/// </summary>
public sealed partial class TpProcessRequest : pb::IMessage<TpProcessRequest> {
  private static readonly pb::MessageParser<TpProcessRequest> _parser = new pb::MessageParser<TpProcessRequest>(() => new TpProcessRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TpProcessRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProcessorReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpProcessRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpProcessRequest(TpProcessRequest other) : this() {
    Header = other.header_ != null ? other.Header.Clone() : null;
    payload_ = other.payload_;
    signature_ = other.signature_;
    contextId_ = other.contextId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpProcessRequest Clone() {
    return new TpProcessRequest(this);
  }

  /// <summary>Field number for the "header" field.</summary>
  public const int HeaderFieldNumber = 1;
  private global::TransactionHeader header_;
  /// <summary>
  /// The transaction header
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TransactionHeader Header {
    get { return header_; }
    set {
      header_ = value;
    }
  }

  /// <summary>Field number for the "payload" field.</summary>
  public const int PayloadFieldNumber = 2;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  /// <summary>
  /// The transaction payload
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Payload {
    get { return payload_; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 3;
  private string signature_ = "";
  /// <summary>
  /// The transaction header_signature
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signature {
    get { return signature_; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "context_id" field.</summary>
  public const int ContextIdFieldNumber = 4;
  private string contextId_ = "";
  /// <summary>
  /// The context_id for state requests.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ContextId {
    get { return contextId_; }
    set {
      contextId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TpProcessRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TpProcessRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Header, other.Header)) return false;
    if (Payload != other.Payload) return false;
    if (Signature != other.Signature) return false;
    if (ContextId != other.ContextId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (header_ != null) hash ^= Header.GetHashCode();
    if (Payload.Length != 0) hash ^= Payload.GetHashCode();
    if (Signature.Length != 0) hash ^= Signature.GetHashCode();
    if (ContextId.Length != 0) hash ^= ContextId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (header_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Header);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Payload);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Signature);
    }
    if (ContextId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ContextId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (header_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
    }
    if (Payload.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    if (Signature.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
    }
    if (ContextId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ContextId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TpProcessRequest other) {
    if (other == null) {
      return;
    }
    if (other.header_ != null) {
      if (header_ == null) {
        header_ = new global::TransactionHeader();
      }
      Header.MergeFrom(other.Header);
    }
    if (other.Payload.Length != 0) {
      Payload = other.Payload;
    }
    if (other.Signature.Length != 0) {
      Signature = other.Signature;
    }
    if (other.ContextId.Length != 0) {
      ContextId = other.ContextId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (header_ == null) {
            header_ = new global::TransactionHeader();
          }
          input.ReadMessage(header_);
          break;
        }
        case 18: {
          Payload = input.ReadBytes();
          break;
        }
        case 26: {
          Signature = input.ReadString();
          break;
        }
        case 34: {
          ContextId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// The response from the transaction processor to the validator/executor
/// used to respond about the validity of a transaction
/// </summary>
public sealed partial class TpProcessResponse : pb::IMessage<TpProcessResponse> {
  private static readonly pb::MessageParser<TpProcessResponse> _parser = new pb::MessageParser<TpProcessResponse>(() => new TpProcessResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TpProcessResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProcessorReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpProcessResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpProcessResponse(TpProcessResponse other) : this() {
    status_ = other.status_;
    message_ = other.message_;
    extendedData_ = other.extendedData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TpProcessResponse Clone() {
    return new TpProcessResponse(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::TpProcessResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TpProcessResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 2;
  private string message_ = "";
  /// <summary>
  /// A message to include on responses in the cases where
  /// status is either INVALID_TRANSACTION or INTERNAL_ERROR
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "extended_data" field.</summary>
  public const int ExtendedDataFieldNumber = 3;
  private pb::ByteString extendedData_ = pb::ByteString.Empty;
  /// <summary>
  /// Information that may be included with the response.
  /// This information is an opaque, application-specific encoded block of
  /// data that will be propagated back to the transaction submitter.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString ExtendedData {
    get { return extendedData_; }
    set {
      extendedData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TpProcessResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TpProcessResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    if (Message != other.Message) return false;
    if (ExtendedData != other.ExtendedData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (ExtendedData.Length != 0) hash ^= ExtendedData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    if (ExtendedData.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(ExtendedData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (ExtendedData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExtendedData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TpProcessResponse other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    if (other.ExtendedData.Length != 0) {
      ExtendedData = other.ExtendedData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::TpProcessResponse.Types.Status) input.ReadEnum();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
        case 26: {
          ExtendedData = input.ReadBytes();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the TpProcessResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("INVALID_TRANSACTION")] InvalidTransaction = 2,
      [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 3,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
