// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client_event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from client_event.proto</summary>
public static partial class ClientEventReflection {

  #region Descriptor
  /// <summary>File descriptor for client_event.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientEventReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJjbGllbnRfZXZlbnQucHJvdG8aDGV2ZW50cy5wcm90byJnChxDbGllbnRF",
          "dmVudHNTdWJzY3JpYmVSZXF1ZXN0EikKDXN1YnNjcmlwdGlvbnMYASADKAsy",
          "Ei5FdmVudFN1YnNjcmlwdGlvbhIcChRsYXN0X2tub3duX2Jsb2NrX2lkcxgC",
          "IAMoCSK7AQodQ2xpZW50RXZlbnRzU3Vic2NyaWJlUmVzcG9uc2USNQoGc3Rh",
          "dHVzGAEgASgOMiUuQ2xpZW50RXZlbnRzU3Vic2NyaWJlUmVzcG9uc2UuU3Rh",
          "dHVzEhgKEHJlc3BvbnNlX21lc3NhZ2UYAiABKAkiSQoGU3RhdHVzEhAKDFNU",
          "QVRVU19VTlNFVBAAEgYKAk9LEAESEgoOSU5WQUxJRF9GSUxURVIQAhIRCg1V",
          "TktOT1dOX0JMT0NLEAMiIAoeQ2xpZW50RXZlbnRzVW5zdWJzY3JpYmVSZXF1",
          "ZXN0IpIBCh9DbGllbnRFdmVudHNVbnN1YnNjcmliZVJlc3BvbnNlEjcKBnN0",
          "YXR1cxgBIAEoDjInLkNsaWVudEV2ZW50c1Vuc3Vic2NyaWJlUmVzcG9uc2Uu",
          "U3RhdHVzIjYKBlN0YXR1cxIQCgxTVEFUVVNfVU5TRVQQABIGCgJPSxABEhIK",
          "DklOVEVSTkFMX0VSUk9SEAIiVgoWQ2xpZW50RXZlbnRzR2V0UmVxdWVzdBIp",
          "Cg1zdWJzY3JpcHRpb25zGAEgAygLMhIuRXZlbnRTdWJzY3JpcHRpb24SEQoJ",
          "YmxvY2tfaWRzGAIgAygJIsEBChdDbGllbnRFdmVudHNHZXRSZXNwb25zZRIv",
          "CgZzdGF0dXMYASABKA4yHy5DbGllbnRFdmVudHNHZXRSZXNwb25zZS5TdGF0",
          "dXMSFgoGZXZlbnRzGAIgAygLMgYuRXZlbnQiXQoGU3RhdHVzEhAKDFNUQVRV",
          "U19VTlNFVBAAEgYKAk9LEAESEgoOSU5URVJOQUxfRVJST1IQAhISCg5JTlZB",
          "TElEX0ZJTFRFUhADEhEKDVVOS05PV05fQkxPQ0sQBEIrChVzYXd0b290aC5z",
          "ZGsucHJvdG9idWZQAVoQY2xpZW50X2V2ZW50X3BiMmIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::EventsReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientEventsSubscribeRequest), global::ClientEventsSubscribeRequest.Parser, new[]{ "Subscriptions", "LastKnownBlockIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientEventsSubscribeResponse), global::ClientEventsSubscribeResponse.Parser, new[]{ "Status", "ResponseMessage" }, null, new[]{ typeof(global::ClientEventsSubscribeResponse.Types.Status) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientEventsUnsubscribeRequest), global::ClientEventsUnsubscribeRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientEventsUnsubscribeResponse), global::ClientEventsUnsubscribeResponse.Parser, new[]{ "Status" }, null, new[]{ typeof(global::ClientEventsUnsubscribeResponse.Types.Status) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientEventsGetRequest), global::ClientEventsGetRequest.Parser, new[]{ "Subscriptions", "BlockIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientEventsGetResponse), global::ClientEventsGetResponse.Parser, new[]{ "Status", "Events" }, null, new[]{ typeof(global::ClientEventsGetResponse.Types.Status) }, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ClientEventsSubscribeRequest : pb::IMessage<ClientEventsSubscribeRequest> {
  private static readonly pb::MessageParser<ClientEventsSubscribeRequest> _parser = new pb::MessageParser<ClientEventsSubscribeRequest>(() => new ClientEventsSubscribeRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientEventsSubscribeRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientEventReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsSubscribeRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsSubscribeRequest(ClientEventsSubscribeRequest other) : this() {
    subscriptions_ = other.subscriptions_.Clone();
    lastKnownBlockIds_ = other.lastKnownBlockIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsSubscribeRequest Clone() {
    return new ClientEventsSubscribeRequest(this);
  }

  /// <summary>Field number for the "subscriptions" field.</summary>
  public const int SubscriptionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::EventSubscription> _repeated_subscriptions_codec
      = pb::FieldCodec.ForMessage(10, global::EventSubscription.Parser);
  private readonly pbc::RepeatedField<global::EventSubscription> subscriptions_ = new pbc::RepeatedField<global::EventSubscription>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::EventSubscription> Subscriptions {
    get { return subscriptions_; }
  }

  /// <summary>Field number for the "last_known_block_ids" field.</summary>
  public const int LastKnownBlockIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_lastKnownBlockIds_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> lastKnownBlockIds_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// The block id (or ids, if trying to walk back a fork) the subscriber last
  /// received events on. It can be set to empty if it has not yet received the
  /// genesis block.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> LastKnownBlockIds {
    get { return lastKnownBlockIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientEventsSubscribeRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientEventsSubscribeRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!subscriptions_.Equals(other.subscriptions_)) return false;
    if(!lastKnownBlockIds_.Equals(other.lastKnownBlockIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= subscriptions_.GetHashCode();
    hash ^= lastKnownBlockIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    subscriptions_.WriteTo(output, _repeated_subscriptions_codec);
    lastKnownBlockIds_.WriteTo(output, _repeated_lastKnownBlockIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += subscriptions_.CalculateSize(_repeated_subscriptions_codec);
    size += lastKnownBlockIds_.CalculateSize(_repeated_lastKnownBlockIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientEventsSubscribeRequest other) {
    if (other == null) {
      return;
    }
    subscriptions_.Add(other.subscriptions_);
    lastKnownBlockIds_.Add(other.lastKnownBlockIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          subscriptions_.AddEntriesFrom(input, _repeated_subscriptions_codec);
          break;
        }
        case 18: {
          lastKnownBlockIds_.AddEntriesFrom(input, _repeated_lastKnownBlockIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ClientEventsSubscribeResponse : pb::IMessage<ClientEventsSubscribeResponse> {
  private static readonly pb::MessageParser<ClientEventsSubscribeResponse> _parser = new pb::MessageParser<ClientEventsSubscribeResponse>(() => new ClientEventsSubscribeResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientEventsSubscribeResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientEventReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsSubscribeResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsSubscribeResponse(ClientEventsSubscribeResponse other) : this() {
    status_ = other.status_;
    responseMessage_ = other.responseMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsSubscribeResponse Clone() {
    return new ClientEventsSubscribeResponse(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::ClientEventsSubscribeResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientEventsSubscribeResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "response_message" field.</summary>
  public const int ResponseMessageFieldNumber = 2;
  private string responseMessage_ = "";
  /// <summary>
  /// Additional information about the response status
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ResponseMessage {
    get { return responseMessage_; }
    set {
      responseMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientEventsSubscribeResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientEventsSubscribeResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    if (ResponseMessage != other.ResponseMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    if (ResponseMessage.Length != 0) hash ^= ResponseMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    if (ResponseMessage.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ResponseMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (ResponseMessage.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientEventsSubscribeResponse other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    if (other.ResponseMessage.Length != 0) {
      ResponseMessage = other.ResponseMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::ClientEventsSubscribeResponse.Types.Status) input.ReadEnum();
          break;
        }
        case 18: {
          ResponseMessage = input.ReadString();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ClientEventsSubscribeResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("INVALID_FILTER")] InvalidFilter = 2,
      [pbr::OriginalName("UNKNOWN_BLOCK")] UnknownBlock = 3,
    }

  }
  #endregion

}

public sealed partial class ClientEventsUnsubscribeRequest : pb::IMessage<ClientEventsUnsubscribeRequest> {
  private static readonly pb::MessageParser<ClientEventsUnsubscribeRequest> _parser = new pb::MessageParser<ClientEventsUnsubscribeRequest>(() => new ClientEventsUnsubscribeRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientEventsUnsubscribeRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientEventReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsUnsubscribeRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsUnsubscribeRequest(ClientEventsUnsubscribeRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsUnsubscribeRequest Clone() {
    return new ClientEventsUnsubscribeRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientEventsUnsubscribeRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientEventsUnsubscribeRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientEventsUnsubscribeRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class ClientEventsUnsubscribeResponse : pb::IMessage<ClientEventsUnsubscribeResponse> {
  private static readonly pb::MessageParser<ClientEventsUnsubscribeResponse> _parser = new pb::MessageParser<ClientEventsUnsubscribeResponse>(() => new ClientEventsUnsubscribeResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientEventsUnsubscribeResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientEventReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsUnsubscribeResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsUnsubscribeResponse(ClientEventsUnsubscribeResponse other) : this() {
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsUnsubscribeResponse Clone() {
    return new ClientEventsUnsubscribeResponse(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::ClientEventsUnsubscribeResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientEventsUnsubscribeResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientEventsUnsubscribeResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientEventsUnsubscribeResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientEventsUnsubscribeResponse other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::ClientEventsUnsubscribeResponse.Types.Status) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ClientEventsUnsubscribeResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 2,
    }

  }
  #endregion

}

public sealed partial class ClientEventsGetRequest : pb::IMessage<ClientEventsGetRequest> {
  private static readonly pb::MessageParser<ClientEventsGetRequest> _parser = new pb::MessageParser<ClientEventsGetRequest>(() => new ClientEventsGetRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientEventsGetRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientEventReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsGetRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsGetRequest(ClientEventsGetRequest other) : this() {
    subscriptions_ = other.subscriptions_.Clone();
    blockIds_ = other.blockIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsGetRequest Clone() {
    return new ClientEventsGetRequest(this);
  }

  /// <summary>Field number for the "subscriptions" field.</summary>
  public const int SubscriptionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::EventSubscription> _repeated_subscriptions_codec
      = pb::FieldCodec.ForMessage(10, global::EventSubscription.Parser);
  private readonly pbc::RepeatedField<global::EventSubscription> subscriptions_ = new pbc::RepeatedField<global::EventSubscription>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::EventSubscription> Subscriptions {
    get { return subscriptions_; }
  }

  /// <summary>Field number for the "block_ids" field.</summary>
  public const int BlockIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_blockIds_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> blockIds_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> BlockIds {
    get { return blockIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientEventsGetRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientEventsGetRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!subscriptions_.Equals(other.subscriptions_)) return false;
    if(!blockIds_.Equals(other.blockIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= subscriptions_.GetHashCode();
    hash ^= blockIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    subscriptions_.WriteTo(output, _repeated_subscriptions_codec);
    blockIds_.WriteTo(output, _repeated_blockIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += subscriptions_.CalculateSize(_repeated_subscriptions_codec);
    size += blockIds_.CalculateSize(_repeated_blockIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientEventsGetRequest other) {
    if (other == null) {
      return;
    }
    subscriptions_.Add(other.subscriptions_);
    blockIds_.Add(other.blockIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          subscriptions_.AddEntriesFrom(input, _repeated_subscriptions_codec);
          break;
        }
        case 18: {
          blockIds_.AddEntriesFrom(input, _repeated_blockIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ClientEventsGetResponse : pb::IMessage<ClientEventsGetResponse> {
  private static readonly pb::MessageParser<ClientEventsGetResponse> _parser = new pb::MessageParser<ClientEventsGetResponse>(() => new ClientEventsGetResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientEventsGetResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientEventReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsGetResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsGetResponse(ClientEventsGetResponse other) : this() {
    status_ = other.status_;
    events_ = other.events_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientEventsGetResponse Clone() {
    return new ClientEventsGetResponse(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::ClientEventsGetResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientEventsGetResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "events" field.</summary>
  public const int EventsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Event> _repeated_events_codec
      = pb::FieldCodec.ForMessage(18, global::Event.Parser);
  private readonly pbc::RepeatedField<global::Event> events_ = new pbc::RepeatedField<global::Event>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Event> Events {
    get { return events_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientEventsGetResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientEventsGetResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    if(!events_.Equals(other.events_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    hash ^= events_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    events_.WriteTo(output, _repeated_events_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    size += events_.CalculateSize(_repeated_events_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientEventsGetResponse other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    events_.Add(other.events_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::ClientEventsGetResponse.Types.Status) input.ReadEnum();
          break;
        }
        case 18: {
          events_.AddEntriesFrom(input, _repeated_events_codec);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ClientEventsGetResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 2,
      [pbr::OriginalName("INVALID_FILTER")] InvalidFilter = 3,
      [pbr::OriginalName("UNKNOWN_BLOCK")] UnknownBlock = 4,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
