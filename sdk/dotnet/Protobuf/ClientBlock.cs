// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client_block.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from client_block.proto</summary>
public static partial class ClientBlockReflection {

  #region Descriptor
  /// <summary>File descriptor for client_block.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientBlockReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJjbGllbnRfYmxvY2sucHJvdG8aC2Jsb2NrLnByb3RvGhljbGllbnRfbGlz",
          "dF9jb250cm9sLnByb3RvIokBChZDbGllbnRCbG9ja0xpc3RSZXF1ZXN0Eg8K",
          "B2hlYWRfaWQYASABKAkSEQoJYmxvY2tfaWRzGAIgAygJEiUKBnBhZ2luZxgD",
          "IAEoCzIVLkNsaWVudFBhZ2luZ0NvbnRyb2xzEiQKB3NvcnRpbmcYBCADKAsy",
          "Ey5DbGllbnRTb3J0Q29udHJvbHMitgIKF0NsaWVudEJsb2NrTGlzdFJlc3Bv",
          "bnNlEi8KBnN0YXR1cxgBIAEoDjIfLkNsaWVudEJsb2NrTGlzdFJlc3BvbnNl",
          "LlN0YXR1cxIWCgZibG9ja3MYAiADKAsyBi5CbG9jaxIPCgdoZWFkX2lkGAMg",
          "ASgJEiUKBnBhZ2luZxgEIAEoCzIVLkNsaWVudFBhZ2luZ1Jlc3BvbnNlIpkB",
          "CgZTdGF0dXMSEAoMU1RBVFVTX1VOU0VUEAASBgoCT0sQARISCg5JTlRFUk5B",
          "TF9FUlJPUhACEg0KCU5PVF9SRUFEWRADEgsKB05PX1JPT1QQBBIPCgtOT19S",
          "RVNPVVJDRRAFEhIKDklOVkFMSURfUEFHSU5HEAYSEAoMSU5WQUxJRF9TT1JU",
          "EAcSDgoKSU5WQUxJRF9JRBAIIi0KGUNsaWVudEJsb2NrR2V0QnlJZFJlcXVl",
          "c3QSEAoIYmxvY2tfaWQYASABKAkiLwoaQ2xpZW50QmxvY2tHZXRCeU51bVJl",
          "cXVlc3QSEQoJYmxvY2tfbnVtGAEgASgEIj4KJENsaWVudEJsb2NrR2V0QnlU",
          "cmFuc2FjdGlvbklkUmVxdWVzdBIWCg50cmFuc2FjdGlvbl9pZBgBIAEoCSIy",
          "Ch5DbGllbnRCbG9ja0dldEJ5QmF0Y2hJZFJlcXVlc3QSEAoIYmF0Y2hfaWQY",
          "ASABKAkiuAEKFkNsaWVudEJsb2NrR2V0UmVzcG9uc2USLgoGc3RhdHVzGAEg",
          "ASgOMh4uQ2xpZW50QmxvY2tHZXRSZXNwb25zZS5TdGF0dXMSFQoFYmxvY2sY",
          "AiABKAsyBi5CbG9jayJXCgZTdGF0dXMSEAoMU1RBVFVTX1VOU0VUEAASBgoC",
          "T0sQARISCg5JTlRFUk5BTF9FUlJPUhACEg8KC05PX1JFU09VUkNFEAUSDgoK",
          "SU5WQUxJRF9JRBAIQisKFXNhd3Rvb3RoLnNkay5wcm90b2J1ZlABWhBjbGll",
          "bnRfYmxvY2tfcGIyYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BlockReflection.Descriptor, global::ClientListControlReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientBlockListRequest), global::ClientBlockListRequest.Parser, new[]{ "HeadId", "BlockIds", "Paging", "Sorting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientBlockListResponse), global::ClientBlockListResponse.Parser, new[]{ "Status", "Blocks", "HeadId", "Paging" }, null, new[]{ typeof(global::ClientBlockListResponse.Types.Status) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientBlockGetByIdRequest), global::ClientBlockGetByIdRequest.Parser, new[]{ "BlockId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientBlockGetByNumRequest), global::ClientBlockGetByNumRequest.Parser, new[]{ "BlockNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientBlockGetByTransactionIdRequest), global::ClientBlockGetByTransactionIdRequest.Parser, new[]{ "TransactionId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientBlockGetByBatchIdRequest), global::ClientBlockGetByBatchIdRequest.Parser, new[]{ "BatchId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientBlockGetResponse), global::ClientBlockGetResponse.Parser, new[]{ "Status", "Block" }, null, new[]{ typeof(global::ClientBlockGetResponse.Types.Status) }, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// A request to return a list of blocks from the validator. May include the id
/// of a particular block to be the `head` of the chain being requested. In that
/// case the list will include that block (if found), and all blocks previous
/// to it on the chain. Can be filtered using specific `block_ids`.
/// </summary>
public sealed partial class ClientBlockListRequest : pb::IMessage<ClientBlockListRequest> {
  private static readonly pb::MessageParser<ClientBlockListRequest> _parser = new pb::MessageParser<ClientBlockListRequest>(() => new ClientBlockListRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientBlockListRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientBlockReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockListRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockListRequest(ClientBlockListRequest other) : this() {
    headId_ = other.headId_;
    blockIds_ = other.blockIds_.Clone();
    Paging = other.paging_ != null ? other.Paging.Clone() : null;
    sorting_ = other.sorting_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockListRequest Clone() {
    return new ClientBlockListRequest(this);
  }

  /// <summary>Field number for the "head_id" field.</summary>
  public const int HeadIdFieldNumber = 1;
  private string headId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HeadId {
    get { return headId_; }
    set {
      headId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "block_ids" field.</summary>
  public const int BlockIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_blockIds_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> blockIds_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> BlockIds {
    get { return blockIds_; }
  }

  /// <summary>Field number for the "paging" field.</summary>
  public const int PagingFieldNumber = 3;
  private global::ClientPagingControls paging_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientPagingControls Paging {
    get { return paging_; }
    set {
      paging_ = value;
    }
  }

  /// <summary>Field number for the "sorting" field.</summary>
  public const int SortingFieldNumber = 4;
  private static readonly pb::FieldCodec<global::ClientSortControls> _repeated_sorting_codec
      = pb::FieldCodec.ForMessage(34, global::ClientSortControls.Parser);
  private readonly pbc::RepeatedField<global::ClientSortControls> sorting_ = new pbc::RepeatedField<global::ClientSortControls>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ClientSortControls> Sorting {
    get { return sorting_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientBlockListRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientBlockListRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HeadId != other.HeadId) return false;
    if(!blockIds_.Equals(other.blockIds_)) return false;
    if (!object.Equals(Paging, other.Paging)) return false;
    if(!sorting_.Equals(other.sorting_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HeadId.Length != 0) hash ^= HeadId.GetHashCode();
    hash ^= blockIds_.GetHashCode();
    if (paging_ != null) hash ^= Paging.GetHashCode();
    hash ^= sorting_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HeadId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HeadId);
    }
    blockIds_.WriteTo(output, _repeated_blockIds_codec);
    if (paging_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Paging);
    }
    sorting_.WriteTo(output, _repeated_sorting_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HeadId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadId);
    }
    size += blockIds_.CalculateSize(_repeated_blockIds_codec);
    if (paging_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
    }
    size += sorting_.CalculateSize(_repeated_sorting_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientBlockListRequest other) {
    if (other == null) {
      return;
    }
    if (other.HeadId.Length != 0) {
      HeadId = other.HeadId;
    }
    blockIds_.Add(other.blockIds_);
    if (other.paging_ != null) {
      if (paging_ == null) {
        paging_ = new global::ClientPagingControls();
      }
      Paging.MergeFrom(other.Paging);
    }
    sorting_.Add(other.sorting_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HeadId = input.ReadString();
          break;
        }
        case 18: {
          blockIds_.AddEntriesFrom(input, _repeated_blockIds_codec);
          break;
        }
        case 26: {
          if (paging_ == null) {
            paging_ = new global::ClientPagingControls();
          }
          input.ReadMessage(paging_);
          break;
        }
        case 34: {
          sorting_.AddEntriesFrom(input, _repeated_sorting_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// A response that lists a chain of blocks with the newest at the beginning,
/// and the oldest (genesis) block at the end.
///
/// Statuses:
///   * OK - everything worked as expected
///   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
///   * NOT_READY - the validator does not yet have a genesis block
///   * NO_ROOT - the head block specified was not found
///   * NO_RESOURCE - no blocks were found with the parameters specified
///   * INVALID_PAGING - the paging controls were malformed or out of range
///   * INVALID_SORT - the sorting controls were malformed or invalid
/// </summary>
public sealed partial class ClientBlockListResponse : pb::IMessage<ClientBlockListResponse> {
  private static readonly pb::MessageParser<ClientBlockListResponse> _parser = new pb::MessageParser<ClientBlockListResponse>(() => new ClientBlockListResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientBlockListResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientBlockReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockListResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockListResponse(ClientBlockListResponse other) : this() {
    status_ = other.status_;
    blocks_ = other.blocks_.Clone();
    headId_ = other.headId_;
    Paging = other.paging_ != null ? other.Paging.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockListResponse Clone() {
    return new ClientBlockListResponse(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::ClientBlockListResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientBlockListResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "blocks" field.</summary>
  public const int BlocksFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Block> _repeated_blocks_codec
      = pb::FieldCodec.ForMessage(18, global::Block.Parser);
  private readonly pbc::RepeatedField<global::Block> blocks_ = new pbc::RepeatedField<global::Block>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Block> Blocks {
    get { return blocks_; }
  }

  /// <summary>Field number for the "head_id" field.</summary>
  public const int HeadIdFieldNumber = 3;
  private string headId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HeadId {
    get { return headId_; }
    set {
      headId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "paging" field.</summary>
  public const int PagingFieldNumber = 4;
  private global::ClientPagingResponse paging_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientPagingResponse Paging {
    get { return paging_; }
    set {
      paging_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientBlockListResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientBlockListResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    if(!blocks_.Equals(other.blocks_)) return false;
    if (HeadId != other.HeadId) return false;
    if (!object.Equals(Paging, other.Paging)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    hash ^= blocks_.GetHashCode();
    if (HeadId.Length != 0) hash ^= HeadId.GetHashCode();
    if (paging_ != null) hash ^= Paging.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    blocks_.WriteTo(output, _repeated_blocks_codec);
    if (HeadId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(HeadId);
    }
    if (paging_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Paging);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    size += blocks_.CalculateSize(_repeated_blocks_codec);
    if (HeadId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadId);
    }
    if (paging_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientBlockListResponse other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    blocks_.Add(other.blocks_);
    if (other.HeadId.Length != 0) {
      HeadId = other.HeadId;
    }
    if (other.paging_ != null) {
      if (paging_ == null) {
        paging_ = new global::ClientPagingResponse();
      }
      Paging.MergeFrom(other.Paging);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::ClientBlockListResponse.Types.Status) input.ReadEnum();
          break;
        }
        case 18: {
          blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
          break;
        }
        case 26: {
          HeadId = input.ReadString();
          break;
        }
        case 34: {
          if (paging_ == null) {
            paging_ = new global::ClientPagingResponse();
          }
          input.ReadMessage(paging_);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ClientBlockListResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 2,
      [pbr::OriginalName("NOT_READY")] NotReady = 3,
      [pbr::OriginalName("NO_ROOT")] NoRoot = 4,
      [pbr::OriginalName("NO_RESOURCE")] NoResource = 5,
      [pbr::OriginalName("INVALID_PAGING")] InvalidPaging = 6,
      [pbr::OriginalName("INVALID_SORT")] InvalidSort = 7,
      [pbr::OriginalName("INVALID_ID")] InvalidId = 8,
    }

  }
  #endregion

}

/// <summary>
/// A request to return a specific block from the validator. The block must be
/// specified by its unique id, in this case the block's header signature
/// </summary>
public sealed partial class ClientBlockGetByIdRequest : pb::IMessage<ClientBlockGetByIdRequest> {
  private static readonly pb::MessageParser<ClientBlockGetByIdRequest> _parser = new pb::MessageParser<ClientBlockGetByIdRequest>(() => new ClientBlockGetByIdRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientBlockGetByIdRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientBlockReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByIdRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByIdRequest(ClientBlockGetByIdRequest other) : this() {
    blockId_ = other.blockId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByIdRequest Clone() {
    return new ClientBlockGetByIdRequest(this);
  }

  /// <summary>Field number for the "block_id" field.</summary>
  public const int BlockIdFieldNumber = 1;
  private string blockId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BlockId {
    get { return blockId_; }
    set {
      blockId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientBlockGetByIdRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientBlockGetByIdRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BlockId != other.BlockId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (BlockId.Length != 0) hash ^= BlockId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (BlockId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(BlockId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (BlockId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BlockId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientBlockGetByIdRequest other) {
    if (other == null) {
      return;
    }
    if (other.BlockId.Length != 0) {
      BlockId = other.BlockId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          BlockId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// A request to return a specific block from the validator. The block must be
/// specified by its block number
/// </summary>
public sealed partial class ClientBlockGetByNumRequest : pb::IMessage<ClientBlockGetByNumRequest> {
  private static readonly pb::MessageParser<ClientBlockGetByNumRequest> _parser = new pb::MessageParser<ClientBlockGetByNumRequest>(() => new ClientBlockGetByNumRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientBlockGetByNumRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientBlockReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByNumRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByNumRequest(ClientBlockGetByNumRequest other) : this() {
    blockNum_ = other.blockNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByNumRequest Clone() {
    return new ClientBlockGetByNumRequest(this);
  }

  /// <summary>Field number for the "block_num" field.</summary>
  public const int BlockNumFieldNumber = 1;
  private ulong blockNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong BlockNum {
    get { return blockNum_; }
    set {
      blockNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientBlockGetByNumRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientBlockGetByNumRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BlockNum != other.BlockNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (BlockNum != 0UL) hash ^= BlockNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (BlockNum != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(BlockNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (BlockNum != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientBlockGetByNumRequest other) {
    if (other == null) {
      return;
    }
    if (other.BlockNum != 0UL) {
      BlockNum = other.BlockNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          BlockNum = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// A request to return a specific block from the validator. The block
/// containing the given transaction is returned. If no block on the current
/// chain contains the transaction, NO_RESOURCE is returned.
/// </summary>
public sealed partial class ClientBlockGetByTransactionIdRequest : pb::IMessage<ClientBlockGetByTransactionIdRequest> {
  private static readonly pb::MessageParser<ClientBlockGetByTransactionIdRequest> _parser = new pb::MessageParser<ClientBlockGetByTransactionIdRequest>(() => new ClientBlockGetByTransactionIdRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientBlockGetByTransactionIdRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientBlockReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByTransactionIdRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByTransactionIdRequest(ClientBlockGetByTransactionIdRequest other) : this() {
    transactionId_ = other.transactionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByTransactionIdRequest Clone() {
    return new ClientBlockGetByTransactionIdRequest(this);
  }

  /// <summary>Field number for the "transaction_id" field.</summary>
  public const int TransactionIdFieldNumber = 1;
  private string transactionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TransactionId {
    get { return transactionId_; }
    set {
      transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientBlockGetByTransactionIdRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientBlockGetByTransactionIdRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TransactionId != other.TransactionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TransactionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(TransactionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TransactionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientBlockGetByTransactionIdRequest other) {
    if (other == null) {
      return;
    }
    if (other.TransactionId.Length != 0) {
      TransactionId = other.TransactionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          TransactionId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// A request to return a specific block from the validator. The block
/// containing the given batch is returned. If no block on the current chain
/// contains the batch, NO_RESOURCE is returned.
/// </summary>
public sealed partial class ClientBlockGetByBatchIdRequest : pb::IMessage<ClientBlockGetByBatchIdRequest> {
  private static readonly pb::MessageParser<ClientBlockGetByBatchIdRequest> _parser = new pb::MessageParser<ClientBlockGetByBatchIdRequest>(() => new ClientBlockGetByBatchIdRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientBlockGetByBatchIdRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientBlockReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByBatchIdRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByBatchIdRequest(ClientBlockGetByBatchIdRequest other) : this() {
    batchId_ = other.batchId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetByBatchIdRequest Clone() {
    return new ClientBlockGetByBatchIdRequest(this);
  }

  /// <summary>Field number for the "batch_id" field.</summary>
  public const int BatchIdFieldNumber = 1;
  private string batchId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BatchId {
    get { return batchId_; }
    set {
      batchId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientBlockGetByBatchIdRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientBlockGetByBatchIdRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BatchId != other.BatchId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (BatchId.Length != 0) hash ^= BatchId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (BatchId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(BatchId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (BatchId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BatchId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientBlockGetByBatchIdRequest other) {
    if (other == null) {
      return;
    }
    if (other.BatchId.Length != 0) {
      BatchId = other.BatchId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          BatchId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// A response that returns the block specified by a ClientBlockGetByIdRequest
/// or  ClientBlockGetByNumRequest.
///
/// Statuses:
///   * OK - everything worked as expected
///   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
///   * NO_RESOURCE - no block with the specified id exists
/// </summary>
public sealed partial class ClientBlockGetResponse : pb::IMessage<ClientBlockGetResponse> {
  private static readonly pb::MessageParser<ClientBlockGetResponse> _parser = new pb::MessageParser<ClientBlockGetResponse>(() => new ClientBlockGetResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientBlockGetResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientBlockReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetResponse(ClientBlockGetResponse other) : this() {
    status_ = other.status_;
    Block = other.block_ != null ? other.Block.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientBlockGetResponse Clone() {
    return new ClientBlockGetResponse(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private global::ClientBlockGetResponse.Types.Status status_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientBlockGetResponse.Types.Status Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "block" field.</summary>
  public const int BlockFieldNumber = 2;
  private global::Block block_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Block Block {
    get { return block_; }
    set {
      block_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientBlockGetResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientBlockGetResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    if (!object.Equals(Block, other.Block)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    if (block_ != null) hash ^= Block.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Status);
    }
    if (block_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Block);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
    }
    if (block_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientBlockGetResponse other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    if (other.block_ != null) {
      if (block_ == null) {
        block_ = new global::Block();
      }
      Block.MergeFrom(other.Block);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status_ = (global::ClientBlockGetResponse.Types.Status) input.ReadEnum();
          break;
        }
        case 18: {
          if (block_ == null) {
            block_ = new global::Block();
          }
          input.ReadMessage(block_);
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ClientBlockGetResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Status {
      [pbr::OriginalName("STATUS_UNSET")] Unset = 0,
      [pbr::OriginalName("OK")] Ok = 1,
      [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 2,
      [pbr::OriginalName("NO_RESOURCE")] NoResource = 5,
      [pbr::OriginalName("INVALID_ID")] InvalidId = 8,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
