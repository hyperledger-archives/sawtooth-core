FROM ubuntu:xenial

# Add additional xenial repos
RUN sh -c "echo deb http://archive.ubuntu.com/ubuntu xenial-backports main restricted universe multiverse >> /etc/apt/sources.list" && \
    sh -c "echo deb-src http://archive.ubuntu.com/ubuntu xenial-backports main restricted universe multiverse >> /etc/apt/sources.list"

# Install general build packages
RUN apt-get update && apt-get install -y -q \
    autoconf \
    automake \
    build-essential \
    connect-proxy \
    g++ \
    git \
    libffi-dev \
    libgmp-dev \
    libtool \
    make \
    pkg-config \
    python-all-dev \
    python3-all-dev \
    rsync \
    sudo \
    wget \
    zip unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install python3 packages
RUN apt-get update && apt-get install -y -q \
    python-setuptools \
    python3-appdirs \
    python3-cbor>=0.1.23 \
    python3-cffi \
    python3-cffi \
    python3-colorlog \
    python3-pip \
    python3-pkgconfig \
    python3-pycparser \
    python3-pytest \
    python3-setuptools \
    python3-stdeb \
    python3-yaml \
    python3-zmq \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create build directories
RUN mkdir -p /home/build/packages && mkdir -p /home/build/projects
ENV build_dir=/home/build/projects pkg_dir=/home/build/packages

# Copy in build script
COPY ./bin/build_ext_debs /home/build/build_ext_debs

# Build external debs
WORKDIR /home/build
RUN /home/build/build_ext_debs -p ${pkg_dir} -b ${build_dir}

# Create mount point for source
VOLUME /project/sawtooth-core
WORKDIR /project/sawtooth-core

# Build sawtooth debs
ENTRYPOINT ./bin/build_debs && cp ${pkg_dir}/*.deb /project/sawtooth-core/build/debs
